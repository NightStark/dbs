!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALL_DHCPV6_RELAYS	dhcpv6.h	20;"	d
ALL_DHCPV6_SERVERS	dhcpv6.h	23;"	d
ALL_IPV6_NODES	odhcpd.h	65;"	d
ALL_IPV6_ROUTERS	odhcpd.h	68;"	d
ARRAY_SIZE	odhcpd.h	44;"	d
ARRAY_SIZE	utils.h	42;"	d
B64_DECODE_LEN	utils.h	193;"	d
B64_ENCODE_LEN	utils.h	192;"	d
BITFIELD_SIZE	utils.h	175;"	d
BITS_PER_LONG	utils.h	172;"	d
BLOBMSG_ALIGN	blobmsg.h	22;"	d
BLOBMSG_PADDING	blobmsg.h	23;"	d
BLOBMSG_TYPE_ARRAY	blobmsg.h	/^	BLOBMSG_TYPE_ARRAY,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_BOOL	blobmsg.h	/^	BLOBMSG_TYPE_BOOL = BLOBMSG_TYPE_INT8,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_INT16	blobmsg.h	/^	BLOBMSG_TYPE_INT16,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_INT32	blobmsg.h	/^	BLOBMSG_TYPE_INT32,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_INT64	blobmsg.h	/^	BLOBMSG_TYPE_INT64,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_INT8	blobmsg.h	/^	BLOBMSG_TYPE_INT8,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_LAST	blobmsg.h	/^	BLOBMSG_TYPE_LAST = __BLOBMSG_TYPE_LAST - 1,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_STRING	blobmsg.h	/^	BLOBMSG_TYPE_STRING,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_TABLE	blobmsg.h	/^	BLOBMSG_TYPE_TABLE,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_UNSPEC	blobmsg.h	/^	BLOBMSG_TYPE_UNSPEC,$/;"	e	enum:blobmsg_type
BLOB_ATTR_ALIGN	blob.h	48;"	d
BLOB_ATTR_BINARY	blob.h	/^	BLOB_ATTR_BINARY,$/;"	e	enum:__anon11
BLOB_ATTR_EXTENDED	blob.h	49;"	d
BLOB_ATTR_ID_MASK	blob.h	45;"	d
BLOB_ATTR_ID_SHIFT	blob.h	46;"	d
BLOB_ATTR_INT16	blob.h	/^	BLOB_ATTR_INT16,$/;"	e	enum:__anon11
BLOB_ATTR_INT32	blob.h	/^	BLOB_ATTR_INT32,$/;"	e	enum:__anon11
BLOB_ATTR_INT64	blob.h	/^	BLOB_ATTR_INT64,$/;"	e	enum:__anon11
BLOB_ATTR_INT8	blob.h	/^	BLOB_ATTR_INT8,$/;"	e	enum:__anon11
BLOB_ATTR_LAST	blob.h	/^	BLOB_ATTR_LAST$/;"	e	enum:__anon11
BLOB_ATTR_LEN_MASK	blob.h	47;"	d
BLOB_ATTR_NESTED	blob.h	/^	BLOB_ATTR_NESTED,$/;"	e	enum:__anon11
BLOB_ATTR_STRING	blob.h	/^	BLOB_ATTR_STRING,$/;"	e	enum:__anon11
BLOB_ATTR_UNSPEC	blob.h	/^	BLOB_ATTR_UNSPEC,$/;"	e	enum:__anon11
BLOB_COOKIE	blob.h	31;"	d
BUILD_BUG_ON	utils.h	49;"	d
BUILD_BUG_ON	utils.h	56;"	d
CC	Makefile	/^CC=mipsel-openwrt-linux-gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-std=gnu99 -Wall$/;"	m
CLOCK_MONOTONIC	utils.h	63;"	d
CLOCK_REALTIME	utils.h	62;"	d
DEFAULT_SET	ustream.c	111;"	d	file:
DEFAULT_SET	ustream.c	128;"	d	file:
DHCPV4_BOOTREPLY	dhcpv4.h	/^	DHCPV4_BOOTREPLY = 2$/;"	e	enum:dhcpv4_op
DHCPV4_BOOTREQUEST	dhcpv4.h	/^	DHCPV4_BOOTREQUEST = 1,$/;"	e	enum:dhcpv4_op
DHCPV4_CLIENT_PORT	dhcpv4.h	16;"	d
DHCPV4_FLAG_BROADCAST	dhcpv4.h	19;"	d
DHCPV4_MSG_ACK	dhcpv4.h	/^	DHCPV4_MSG_ACK = 5,$/;"	e	enum:dhcpv4_msg
DHCPV4_MSG_DECLINE	dhcpv4.h	/^	DHCPV4_MSG_DECLINE = 4,$/;"	e	enum:dhcpv4_msg
DHCPV4_MSG_DISCOVER	dhcpv4.h	/^	DHCPV4_MSG_DISCOVER = 1,$/;"	e	enum:dhcpv4_msg
DHCPV4_MSG_INFORM	dhcpv4.h	/^	DHCPV4_MSG_INFORM = 8,$/;"	e	enum:dhcpv4_msg
DHCPV4_MSG_NAK	dhcpv4.h	/^	DHCPV4_MSG_NAK = 6,$/;"	e	enum:dhcpv4_msg
DHCPV4_MSG_OFFER	dhcpv4.h	/^	DHCPV4_MSG_OFFER = 2,$/;"	e	enum:dhcpv4_msg
DHCPV4_MSG_RELEASE	dhcpv4.h	/^	DHCPV4_MSG_RELEASE = 7,$/;"	e	enum:dhcpv4_msg
DHCPV4_MSG_REQUEST	dhcpv4.h	/^	DHCPV4_MSG_REQUEST = 3,$/;"	e	enum:dhcpv4_msg
DHCPV4_OPT_BROADCAST	dhcpv4.h	/^	DHCPV4_OPT_BROADCAST = 28,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_DNSSERVER	dhcpv4.h	/^	DHCPV4_OPT_DNSSERVER = 6,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_DOMAIN	dhcpv4.h	/^	DHCPV4_OPT_DOMAIN = 15,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_END	dhcpv4.h	/^	DHCPV4_OPT_END = 255,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_HOSTNAME	dhcpv4.h	/^	DHCPV4_OPT_HOSTNAME = 12,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_IPADDRESS	dhcpv4.h	/^	DHCPV4_OPT_IPADDRESS = 50,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_LEASETIME	dhcpv4.h	/^	DHCPV4_OPT_LEASETIME = 51,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_MESSAGE	dhcpv4.h	/^	DHCPV4_OPT_MESSAGE = 53,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_MTU	dhcpv4.h	/^	DHCPV4_OPT_MTU = 26,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_NETMASK	dhcpv4.h	/^	DHCPV4_OPT_NETMASK = 1,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_NTPSERVER	dhcpv4.h	/^	DHCPV4_OPT_NTPSERVER = 42,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_REBIND	dhcpv4.h	/^	DHCPV4_OPT_REBIND = 59,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_RENEW	dhcpv4.h	/^	DHCPV4_OPT_RENEW = 58,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_REQUEST	dhcpv4.h	/^	DHCPV4_OPT_REQUEST = 17,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_ROUTER	dhcpv4.h	/^	DHCPV4_OPT_ROUTER = 3,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_SEARCH_DOMAIN	dhcpv4.h	/^	DHCPV4_OPT_SEARCH_DOMAIN = 119,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_SERVERID	dhcpv4.h	/^	DHCPV4_OPT_SERVERID = 54,$/;"	e	enum:dhcpv4_opt
DHCPV4_OPT_USER_CLASS	dhcpv4.h	/^	DHCPV4_OPT_USER_CLASS = 77,$/;"	e	enum:dhcpv4_opt
DHCPV4_SERVER_PORT	dhcpv4.h	17;"	d
DHCPV6_CLIENT_PORT	dhcpv6.h	26;"	d
DHCPV6_DUID_VENDOR	dhcpv6.h	64;"	d
DHCPV6_ENT_NO	dhcpv6.h	74;"	d
DHCPV6_ENT_TYPE	dhcpv6.h	75;"	d
DHCPV6_HOP_COUNT_LIMIT	dhcpv6.h	78;"	d
DHCPV6_MSG_ADVERTISE	dhcpv6.h	30;"	d
DHCPV6_MSG_CONFIRM	dhcpv6.h	32;"	d
DHCPV6_MSG_DECLINE	dhcpv6.h	37;"	d
DHCPV6_MSG_INFORMATION_REQUEST	dhcpv6.h	39;"	d
DHCPV6_MSG_REBIND	dhcpv6.h	34;"	d
DHCPV6_MSG_RECONFIGURE	dhcpv6.h	38;"	d
DHCPV6_MSG_RELAY_FORW	dhcpv6.h	40;"	d
DHCPV6_MSG_RELAY_REPL	dhcpv6.h	41;"	d
DHCPV6_MSG_RELEASE	dhcpv6.h	36;"	d
DHCPV6_MSG_RENEW	dhcpv6.h	33;"	d
DHCPV6_MSG_REPLY	dhcpv6.h	35;"	d
DHCPV6_MSG_REQUEST	dhcpv6.h	31;"	d
DHCPV6_MSG_SOLICIT	dhcpv6.h	29;"	d
DHCPV6_OPT_AUTH	dhcpv6.h	50;"	d
DHCPV6_OPT_CLIENTID	dhcpv6.h	43;"	d
DHCPV6_OPT_DNS_DOMAIN	dhcpv6.h	56;"	d
DHCPV6_OPT_DNS_SERVERS	dhcpv6.h	55;"	d
DHCPV6_OPT_FQDN	dhcpv6.h	60;"	d
DHCPV6_OPT_IA_ADDR	dhcpv6.h	46;"	d
DHCPV6_OPT_IA_NA	dhcpv6.h	45;"	d
DHCPV6_OPT_IA_PD	dhcpv6.h	57;"	d
DHCPV6_OPT_IA_PREFIX	dhcpv6.h	58;"	d
DHCPV6_OPT_INFO_REFRESH	dhcpv6.h	59;"	d
DHCPV6_OPT_INF_MAX_RT	dhcpv6.h	62;"	d
DHCPV6_OPT_INTERFACE_ID	dhcpv6.h	52;"	d
DHCPV6_OPT_ORO	dhcpv6.h	47;"	d
DHCPV6_OPT_RECONF_ACCEPT	dhcpv6.h	54;"	d
DHCPV6_OPT_RECONF_MSG	dhcpv6.h	53;"	d
DHCPV6_OPT_RELAY_MSG	dhcpv6.h	49;"	d
DHCPV6_OPT_SERVERID	dhcpv6.h	44;"	d
DHCPV6_OPT_SOL_MAX_RT	dhcpv6.h	61;"	d
DHCPV6_OPT_STATUS	dhcpv6.h	48;"	d
DHCPV6_OPT_USER_CLASS	dhcpv6.h	51;"	d
DHCPV6_SERVER_PORT	dhcpv6.h	27;"	d
DHCPV6_STATUS_NOADDRSAVAIL	dhcpv6.h	67;"	d
DHCPV6_STATUS_NOBINDING	dhcpv6.h	68;"	d
DHCPV6_STATUS_NOPREFIXAVAIL	dhcpv6.h	71;"	d
DHCPV6_STATUS_NOTONLINK	dhcpv6.h	69;"	d
DHCPV6_STATUS_OK	dhcpv6.h	66;"	d
DHCPV6_STATUS_USEMULTICAST	dhcpv6.h	70;"	d
DUMP_ATTR_INTERFACE	ubus.c	/^	DUMP_ATTR_INTERFACE,$/;"	e	enum:__anon4	file:
DUMP_ATTR_MAX	ubus.c	/^	DUMP_ATTR_MAX$/;"	e	enum:__anon4	file:
EPOLLRDHUP	uloop.c	208;"	d	file:
F	md5.c	66;"	d	file:
G	md5.c	67;"	d	file:
GET	md5.c	87;"	d	file:
GET	md5.c	96;"	d	file:
H	md5.c	68;"	d	file:
H2	md5.c	69;"	d	file:
I	md5.c	70;"	d	file:
IFACE_ATTR_ADDRESS	ubus.c	/^	IFACE_ATTR_ADDRESS,$/;"	e	enum:__anon5	file:
IFACE_ATTR_DATA	ubus.c	/^	IFACE_ATTR_DATA,$/;"	e	enum:__anon5	file:
IFACE_ATTR_DHCPV4	config.c	/^	IFACE_ATTR_DHCPV4,$/;"	e	enum:__anon8	file:
IFACE_ATTR_DHCPV4	config_bhu.bak.c	/^	IFACE_ATTR_DHCPV4,$/;"	e	enum:__anon1	file:
IFACE_ATTR_DHCPV6	config.c	/^	IFACE_ATTR_DHCPV6,$/;"	e	enum:__anon8	file:
IFACE_ATTR_DHCPV6	config_bhu.bak.c	/^	IFACE_ATTR_DHCPV6,$/;"	e	enum:__anon1	file:
IFACE_ATTR_DHCPV6_RAW	config.c	/^	IFACE_ATTR_DHCPV6_RAW,$/;"	e	enum:__anon8	file:
IFACE_ATTR_DHCPV6_RAW	config_bhu.bak.c	/^	IFACE_ATTR_DHCPV6_RAW,$/;"	e	enum:__anon1	file:
IFACE_ATTR_DNS	config.c	/^	IFACE_ATTR_DNS,$/;"	e	enum:__anon8	file:
IFACE_ATTR_DNS	config_bhu.bak.c	/^	IFACE_ATTR_DNS,$/;"	e	enum:__anon1	file:
IFACE_ATTR_DOMAIN	config.c	/^	IFACE_ATTR_DOMAIN,$/;"	e	enum:__anon8	file:
IFACE_ATTR_DOMAIN	config_bhu.bak.c	/^	IFACE_ATTR_DOMAIN,$/;"	e	enum:__anon1	file:
IFACE_ATTR_DYNAMICDHCP	config.c	/^	IFACE_ATTR_DYNAMICDHCP,$/;"	e	enum:__anon8	file:
IFACE_ATTR_DYNAMICDHCP	config_bhu.bak.c	/^	IFACE_ATTR_DYNAMICDHCP,$/;"	e	enum:__anon1	file:
IFACE_ATTR_FILTER_CLASS	config.c	/^	IFACE_ATTR_FILTER_CLASS,$/;"	e	enum:__anon8	file:
IFACE_ATTR_FILTER_CLASS	config_bhu.bak.c	/^	IFACE_ATTR_FILTER_CLASS,$/;"	e	enum:__anon1	file:
IFACE_ATTR_IFNAME	config.c	/^	IFACE_ATTR_IFNAME,$/;"	e	enum:__anon8	file:
IFACE_ATTR_IFNAME	config_bhu.bak.c	/^	IFACE_ATTR_IFNAME,$/;"	e	enum:__anon1	file:
IFACE_ATTR_IFNAME	ubus.c	/^	IFACE_ATTR_IFNAME,$/;"	e	enum:__anon5	file:
IFACE_ATTR_IGNORE	config.c	/^	IFACE_ATTR_IGNORE,$/;"	e	enum:__anon8	file:
IFACE_ATTR_IGNORE	config_bhu.bak.c	/^	IFACE_ATTR_IGNORE,$/;"	e	enum:__anon1	file:
IFACE_ATTR_INTERFACE	config.c	/^	IFACE_ATTR_INTERFACE,$/;"	e	enum:__anon8	file:
IFACE_ATTR_INTERFACE	config_bhu.bak.c	/^	IFACE_ATTR_INTERFACE,$/;"	e	enum:__anon1	file:
IFACE_ATTR_INTERFACE	ubus.c	/^	IFACE_ATTR_INTERFACE,$/;"	e	enum:__anon5	file:
IFACE_ATTR_LEASETIME	config.c	/^	IFACE_ATTR_LEASETIME,$/;"	e	enum:__anon8	file:
IFACE_ATTR_LEASETIME	config_bhu.bak.c	/^	IFACE_ATTR_LEASETIME,$/;"	e	enum:__anon1	file:
IFACE_ATTR_LIMIT	config.c	/^	IFACE_ATTR_LIMIT,$/;"	e	enum:__anon8	file:
IFACE_ATTR_LIMIT	config_bhu.bak.c	/^	IFACE_ATTR_LIMIT,$/;"	e	enum:__anon1	file:
IFACE_ATTR_MASTER	config.c	/^	IFACE_ATTR_MASTER,$/;"	e	enum:__anon8	file:
IFACE_ATTR_MASTER	config_bhu.bak.c	/^	IFACE_ATTR_MASTER,$/;"	e	enum:__anon1	file:
IFACE_ATTR_MAX	config.c	/^	IFACE_ATTR_MAX$/;"	e	enum:__anon8	file:
IFACE_ATTR_MAX	config_bhu.bak.c	/^	IFACE_ATTR_MAX$/;"	e	enum:__anon1	file:
IFACE_ATTR_MAX	ubus.c	/^	IFACE_ATTR_MAX,$/;"	e	enum:__anon5	file:
IFACE_ATTR_NDP	config.c	/^	IFACE_ATTR_NDP,$/;"	e	enum:__anon8	file:
IFACE_ATTR_NDP	config_bhu.bak.c	/^	IFACE_ATTR_NDP,$/;"	e	enum:__anon1	file:
IFACE_ATTR_NDPROXY_ROUTING	config.c	/^	IFACE_ATTR_NDPROXY_ROUTING,$/;"	e	enum:__anon8	file:
IFACE_ATTR_NDPROXY_ROUTING	config_bhu.bak.c	/^	IFACE_ATTR_NDPROXY_ROUTING,$/;"	e	enum:__anon1	file:
IFACE_ATTR_NDPROXY_SLAVE	config.c	/^	IFACE_ATTR_NDPROXY_SLAVE,$/;"	e	enum:__anon8	file:
IFACE_ATTR_NDPROXY_SLAVE	config_bhu.bak.c	/^	IFACE_ATTR_NDPROXY_SLAVE,$/;"	e	enum:__anon1	file:
IFACE_ATTR_NETWORKID	config.c	/^	IFACE_ATTR_NETWORKID,$/;"	e	enum:__anon8	file:
IFACE_ATTR_NETWORKID	config_bhu.bak.c	/^	IFACE_ATTR_NETWORKID,$/;"	e	enum:__anon1	file:
IFACE_ATTR_PD_CER	config.c	/^	IFACE_ATTR_PD_CER,$/;"	e	enum:__anon8	file:
IFACE_ATTR_PD_CER	config_bhu.bak.c	/^	IFACE_ATTR_PD_CER,$/;"	e	enum:__anon1	file:
IFACE_ATTR_PD_MANAGER	config.c	/^	IFACE_ATTR_PD_MANAGER,$/;"	e	enum:__anon8	file:
IFACE_ATTR_PD_MANAGER	config_bhu.bak.c	/^	IFACE_ATTR_PD_MANAGER,$/;"	e	enum:__anon1	file:
IFACE_ATTR_PREFIX	ubus.c	/^	IFACE_ATTR_PREFIX,$/;"	e	enum:__anon5	file:
IFACE_ATTR_RA	config.c	/^	IFACE_ATTR_RA,$/;"	e	enum:__anon8	file:
IFACE_ATTR_RA	config_bhu.bak.c	/^	IFACE_ATTR_RA,$/;"	e	enum:__anon1	file:
IFACE_ATTR_RA_ADVROUTER	config.c	/^	IFACE_ATTR_RA_ADVROUTER,$/;"	e	enum:__anon8	file:
IFACE_ATTR_RA_ADVROUTER	config_bhu.bak.c	/^	IFACE_ATTR_RA_ADVROUTER,$/;"	e	enum:__anon1	file:
IFACE_ATTR_RA_DEFAULT	config.c	/^	IFACE_ATTR_RA_DEFAULT,$/;"	e	enum:__anon8	file:
IFACE_ATTR_RA_DEFAULT	config_bhu.bak.c	/^	IFACE_ATTR_RA_DEFAULT,$/;"	e	enum:__anon1	file:
IFACE_ATTR_RA_MANAGEMENT	config.c	/^	IFACE_ATTR_RA_MANAGEMENT,$/;"	e	enum:__anon8	file:
IFACE_ATTR_RA_MANAGEMENT	config_bhu.bak.c	/^	IFACE_ATTR_RA_MANAGEMENT,$/;"	e	enum:__anon1	file:
IFACE_ATTR_RA_MAXINTERVAL	config.c	/^	IFACE_ATTR_RA_MAXINTERVAL,$/;"	e	enum:__anon8	file:
IFACE_ATTR_RA_MAXINTERVAL	config_bhu.bak.c	/^	IFACE_ATTR_RA_MAXINTERVAL,$/;"	e	enum:__anon1	file:
IFACE_ATTR_RA_OFFLINK	config.c	/^	IFACE_ATTR_RA_OFFLINK,$/;"	e	enum:__anon8	file:
IFACE_ATTR_RA_OFFLINK	config_bhu.bak.c	/^	IFACE_ATTR_RA_OFFLINK,$/;"	e	enum:__anon1	file:
IFACE_ATTR_RA_PREFERENCE	config.c	/^	IFACE_ATTR_RA_PREFERENCE,$/;"	e	enum:__anon8	file:
IFACE_ATTR_RA_PREFERENCE	config_bhu.bak.c	/^	IFACE_ATTR_RA_PREFERENCE,$/;"	e	enum:__anon1	file:
IFACE_ATTR_ROUTER	config.c	/^	IFACE_ATTR_ROUTER,$/;"	e	enum:__anon8	file:
IFACE_ATTR_ROUTER	config_bhu.bak.c	/^	IFACE_ATTR_ROUTER,$/;"	e	enum:__anon1	file:
IFACE_ATTR_START	config.c	/^	IFACE_ATTR_START,$/;"	e	enum:__anon8	file:
IFACE_ATTR_START	config_bhu.bak.c	/^	IFACE_ATTR_START,$/;"	e	enum:__anon1	file:
IFACE_ATTR_UP	ubus.c	/^	IFACE_ATTR_UP,$/;"	e	enum:__anon5	file:
IFACE_ATTR_UPSTREAM	config.c	/^	IFACE_ATTR_UPSTREAM,$/;"	e	enum:__anon8	file:
IFACE_ATTR_UPSTREAM	config_bhu.bak.c	/^	IFACE_ATTR_UPSTREAM,$/;"	e	enum:__anon1	file:
INIT_LIST_HEAD	list.h	/^INIT_LIST_HEAD(struct list_head *list)$/;"	f	signature:(struct list_head *list)
IOV_CERID	dhcpv6.c	/^	IOV_CERID,$/;"	e	enum:__anon7	file:
IOV_DEST	dhcpv6.c	/^	IOV_DEST,$/;"	e	enum:__anon7	file:
IOV_DHCPV6_RAW	dhcpv6.c	/^	IOV_DHCPV6_RAW,$/;"	e	enum:__anon7	file:
IOV_DNS	dhcpv6.c	/^	IOV_DNS,$/;"	e	enum:__anon7	file:
IOV_DNS_ADDR	dhcpv6.c	/^	IOV_DNS_ADDR,$/;"	e	enum:__anon7	file:
IOV_MAXRT	dhcpv6.c	/^	IOV_MAXRT,$/;"	e	enum:__anon7	file:
IOV_NESTED	dhcpv6.c	/^	IOV_NESTED = 0,$/;"	e	enum:__anon7	file:
IOV_PDBUF	dhcpv6.c	/^	IOV_PDBUF,$/;"	e	enum:__anon7	file:
IOV_REFRESH	dhcpv6.c	112;"	d	file:
IOV_RELAY_MSG	dhcpv6.c	/^	IOV_RELAY_MSG,$/;"	e	enum:__anon7	file:
IOV_SEARCH	dhcpv6.c	/^	IOV_SEARCH,$/;"	e	enum:__anon7	file:
IOV_SEARCH_DOMAIN	dhcpv6.c	/^	IOV_SEARCH_DOMAIN,$/;"	e	enum:__anon7	file:
IOV_STAT	dhcpv6.c	106;"	d	file:
IOV_TOTAL	dhcpv6.c	/^	IOV_TOTAL$/;"	e	enum:__anon7	file:
LEASE_ATTR_DUID	config.c	/^	LEASE_ATTR_DUID,$/;"	e	enum:__anon9	file:
LEASE_ATTR_DUID	config_bhu.bak.c	/^	LEASE_ATTR_DUID,$/;"	e	enum:__anon2	file:
LEASE_ATTR_HOSTID	config.c	/^	LEASE_ATTR_HOSTID,$/;"	e	enum:__anon9	file:
LEASE_ATTR_HOSTID	config_bhu.bak.c	/^	LEASE_ATTR_HOSTID,$/;"	e	enum:__anon2	file:
LEASE_ATTR_IP	config.c	/^	LEASE_ATTR_IP,$/;"	e	enum:__anon9	file:
LEASE_ATTR_IP	config_bhu.bak.c	/^	LEASE_ATTR_IP,$/;"	e	enum:__anon2	file:
LEASE_ATTR_LEASETIME	config.c	/^	LEASE_ATTR_LEASETIME,$/;"	e	enum:__anon9	file:
LEASE_ATTR_LEASETIME	config_bhu.bak.c	/^	LEASE_ATTR_LEASETIME,$/;"	e	enum:__anon2	file:
LEASE_ATTR_MAC	config.c	/^	LEASE_ATTR_MAC,$/;"	e	enum:__anon9	file:
LEASE_ATTR_MAC	config_bhu.bak.c	/^	LEASE_ATTR_MAC,$/;"	e	enum:__anon2	file:
LEASE_ATTR_MAX	config.c	/^	LEASE_ATTR_MAX$/;"	e	enum:__anon9	file:
LEASE_ATTR_MAX	config_bhu.bak.c	/^	LEASE_ATTR_MAX$/;"	e	enum:__anon2	file:
LEASE_ATTR_NAME	config.c	/^	LEASE_ATTR_NAME,$/;"	e	enum:__anon9	file:
LEASE_ATTR_NAME	config_bhu.bak.c	/^	LEASE_ATTR_NAME,$/;"	e	enum:__anon2	file:
LIBS	Makefile	/^LIBS=-lresolv$/;"	m
LIST_HEAD	list.h	51;"	d
LIST_HEAD	list.h	52;"	d
LIST_HEAD_INIT	list.h	50;"	d
MAX_STACK_BUFLEN	ustream.c	462;"	d	file:
MaxRtrAdvInterval	router.h	38;"	d
MaxValidTime	router.h	37;"	d
NDP_MAX_NEIGHBORS	ndp.h	23;"	d
ND_OPT_DNS_SEARCH	odhcpd.h	56;"	d
ND_OPT_RECURSIVE_DNS	odhcpd.h	55;"	d
ND_OPT_ROUTE_INFO	odhcpd.h	54;"	d
ND_RA_FLAG_PROXY	router.h	40;"	d
ND_RA_PREF_HIGH	router.h	41;"	d
ND_RA_PREF_LOW	router.h	42;"	d
OBJ_ATTR_ID	ubus.c	/^	OBJ_ATTR_ID,$/;"	e	enum:__anon6	file:
OBJ_ATTR_MAX	ubus.c	/^	OBJ_ATTR_MAX$/;"	e	enum:__anon6	file:
OBJ_ATTR_PATH	ubus.c	/^	OBJ_ATTR_PATH,$/;"	e	enum:__anon6	file:
ODHCPD_ATTR_LEASEFILE	config.c	/^	ODHCPD_ATTR_LEASEFILE,$/;"	e	enum:__anon10	file:
ODHCPD_ATTR_LEASEFILE	config_bhu.bak.c	/^	ODHCPD_ATTR_LEASEFILE,$/;"	e	enum:__anon3	file:
ODHCPD_ATTR_LEASETRIGGER	config.c	/^	ODHCPD_ATTR_LEASETRIGGER,$/;"	e	enum:__anon10	file:
ODHCPD_ATTR_LEASETRIGGER	config_bhu.bak.c	/^	ODHCPD_ATTR_LEASETRIGGER,$/;"	e	enum:__anon3	file:
ODHCPD_ATTR_MAINDHCP	config.c	/^	ODHCPD_ATTR_MAINDHCP,$/;"	e	enum:__anon10	file:
ODHCPD_ATTR_MAINDHCP	config_bhu.bak.c	/^	ODHCPD_ATTR_MAINDHCP,$/;"	e	enum:__anon3	file:
ODHCPD_ATTR_MAX	config.c	/^	ODHCPD_ATTR_MAX$/;"	e	enum:__anon10	file:
ODHCPD_ATTR_MAX	config_bhu.bak.c	/^	ODHCPD_ATTR_MAX$/;"	e	enum:__anon3	file:
RA_IOV_LEN	router.c	40;"	d	file:
READ_BLOCKED_FULL	ustream.h	/^	READ_BLOCKED_FULL = (1 << 1),$/;"	e	enum:read_blocked_reason
READ_BLOCKED_USER	ustream.h	/^	READ_BLOCKED_USER = (1 << 0),$/;"	e	enum:read_blocked_reason
RELAYD_BUFFER_SIZE	odhcpd.h	58;"	d
RELAYD_DISABLED	odhcpd.h	/^	RELAYD_DISABLED,$/;"	e	enum:odhcpd_mode
RELAYD_HYBRID	odhcpd.h	/^	RELAYD_HYBRID$/;"	e	enum:odhcpd_mode
RELAYD_MANAGED_MFLAG	odhcpd.h	190;"	d
RELAYD_MANAGED_NO_AFLAG	odhcpd.h	191;"	d
RELAYD_MAX_PREFIXES	odhcpd.h	59;"	d
RELAYD_RELAY	odhcpd.h	/^	RELAYD_RELAY,$/;"	e	enum:odhcpd_mode
RELAYD_SERVER	odhcpd.h	/^	RELAYD_SERVER,$/;"	e	enum:odhcpd_mode
SET	md5.c	85;"	d	file:
SET	md5.c	90;"	d	file:
SOL_NETLINK	ndp.h	20;"	d
STEP	md5.c	75;"	d	file:
TIME_LEFT	router.c	42;"	d	file:
ULOOP_BLOCKING	uloop.h	46;"	d
ULOOP_EDGE_DEFER	uloop.h	53;"	d
ULOOP_EDGE_TRIGGER	uloop.h	45;"	d
ULOOP_ERROR_CB	uloop.h	56;"	d
ULOOP_EVENT_BUFFERED	uloop.h	51;"	d
ULOOP_EVENT_MASK	uloop.h	48;"	d
ULOOP_MAX_EVENTS	uloop.c	54;"	d	file:
ULOOP_READ	uloop.h	43;"	d
ULOOP_WRITE	uloop.h	44;"	d
USE_EPOLL	uloop.h	30;"	d
USE_KQUEUE	uloop.h	28;"	d
USOCK_H_	usock.h	20;"	d
USOCK_IPV4ONLY	usock.h	30;"	d
USOCK_IPV6ONLY	usock.h	29;"	d
USOCK_NOCLOEXEC	usock.h	26;"	d
USOCK_NONBLOCK	usock.h	27;"	d
USOCK_NUMERIC	usock.h	28;"	d
USOCK_SERVER	usock.h	25;"	d
USOCK_TCP	usock.h	22;"	d
USOCK_UDP	usock.h	23;"	d
USOCK_UNIX	usock.h	31;"	d
_BLOB_H__	blob.h	20;"	d
_GNUC_MIN_VER	utils.h	70;"	d
_GNUC_MIN_VER	utils.h	72;"	d
_GNU_SOURCE	config_bhu.bak.c	1;"	d	file:
_LIBUBOX_MD5_H	md5.h	42;"	d
_LINUX_LIST_H_	list.h	30;"	d
_ULOOP_H__	uloop.h	19;"	d
__BIG_ENDIAN	utils.h	98;"	d
__BLOBMSG_H	blobmsg.h	17;"	d
__BLOBMSG_TYPE_LAST	blobmsg.h	/^	__BLOBMSG_TYPE_LAST,$/;"	e	enum:blobmsg_type
__BUILD_BUG_ON	utils.h	45;"	d
__BYTE_ORDER	utils.h	95;"	d
__LIBUBOX_UTILS_H	utils.h	20;"	d
__LITTLE_ENDIAN	utils.h	101;"	d
__USTREAM_H	ustream.h	20;"	d
__blob_for_each_attr	blob.h	242;"	d
__calloc_a	utils.c	/^void *__calloc_a(size_t len, ...)$/;"	f	signature:(size_t len, ...)
__calloc_a	utils.h	/^void *__calloc_a(size_t len, ...);$/;"	p	signature:(size_t len, ...)
__constructor	utils.h	160;"	d
__destructor	utils.h	164;"	d
__dn_comp	dn_comp.c	/^int __dn_comp(const char *src, unsigned char *dst, int space, unsigned char **dnptrs, unsigned char **lastdnptr)$/;"	f	signature:(const char *src, unsigned char *dst, int space, unsigned char **dnptrs, unsigned char **lastdnptr)
__hidden	utils.h	168;"	d
__packed	blob.h	/^} __packed;$/;"	v	typeref:struct:blob_attr
__packed	blobmsg.h	/^} __packed;$/;"	v	typeref:struct:blobmsg_hdr
__packed	utils.h	156;"	d
__u_bswap16	utils.h	/^static inline uint16_t __u_bswap16(uint16_t val)$/;"	f	signature:(uint16_t val)
__u_bswap32	utils.h	110;"	d
__u_bswap32	utils.h	113;"	d
__u_bswap64	utils.h	111;"	d
__u_bswap64	utils.h	114;"	d
__uloop_fd_delete	uloop.c	/^static int __uloop_fd_delete(struct uloop_fd *fd)$/;"	f	file:	signature:(struct uloop_fd *fd)
__uloop_fd_delete	uloop.c	/^static int __uloop_fd_delete(struct uloop_fd *sock)$/;"	f	file:	signature:(struct uloop_fd *sock)
__ustream_fd_poll	ustream-fd.c	/^static bool __ustream_fd_poll(struct ustream_fd *sf, unsigned int events)$/;"	f	file:	signature:(struct ustream_fd *sf, unsigned int events)
__ustream_set_read_blocked	ustream.c	/^static void __ustream_set_read_blocked(struct ustream *s, unsigned char val)$/;"	f	file:	signature:(struct ustream *s, unsigned char val)
_list_add	list.h	/^_list_add(struct list_head *_new, struct list_head *prev,$/;"	f	signature:(struct list_head *_new, struct list_head *prev, struct list_head *next)
_list_del	list.h	/^_list_del(struct list_head *entry)$/;"	f	signature:(struct list_head *entry)
_list_splice	list.h	/^_list_splice(const struct list_head *list, struct list_head *prev,$/;"	f	signature:(const struct list_head *list, struct list_head *prev, struct list_head *next)
_packed	dhcpv6.h	/^} _packed;$/;"	v	typeref:struct:dhcpv6_auth_reconfigure
_packed	dhcpv6.h	/^} _packed;$/;"	v	typeref:struct:dhcpv6_ia_addr
_packed	dhcpv6.h	/^} _packed;$/;"	v	typeref:struct:dhcpv6_ia_hdr
_packed	dhcpv6.h	/^} _packed;$/;"	v	typeref:struct:dhcpv6_ia_prefix
_packed	odhcpd.h	62;"	d
_unused	odhcpd.h	61;"	d
a	md5.h	/^	uint32_t a, b, c, d;$/;"	m	struct:md5_ctx	access:public
accept_reconf	dhcpv6.h	/^	bool accept_reconf;$/;"	m	struct:dhcpv6_assignment	access:public
addr	dhcpv4.h	/^	uint32_t addr;$/;"	m	struct:dhcpv4_assignment	access:public
addr	dhcpv6.h	/^	struct in6_addr addr;$/;"	m	struct:dhcpv6_cer_id	typeref:struct:dhcpv6_cer_id::in6_addr	access:public
addr	dhcpv6.h	/^	struct in6_addr addr;$/;"	m	struct:dhcpv6_ia_addr	typeref:struct:dhcpv6_ia_addr::in6_addr	access:public
addr	dhcpv6.h	/^	struct in6_addr addr;$/;"	m	struct:dhcpv6_ia_prefix	typeref:struct:dhcpv6_ia_prefix::in6_addr	access:public
addr	ndp.h	/^	struct in6_addr addr;$/;"	m	struct:ndp_neighbor	typeref:struct:ndp_neighbor::in6_addr	access:public
addr	odhcpd.h	/^	struct in6_addr addr;$/;"	m	struct:odhcpd_ipaddr	typeref:struct:odhcpd_ipaddr::in6_addr	access:public
algorithm	dhcpv6.h	/^	uint8_t algorithm;$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
alloc	ustream.h	/^	int (*alloc)(struct ustream *s, struct ustream_buf_list *l);$/;"	m	struct:ustream_buf_list	access:public
always_rewrite_dns	odhcpd.h	/^	bool always_rewrite_dns;$/;"	m	struct:interface	access:public
append_reply	dhcpv6-ia.c	/^static size_t append_reply(uint8_t *buf, size_t buflen, uint16_t status,$/;"	f	file:	signature:(uint8_t *buf, size_t buflen, uint16_t status, const struct dhcpv6_ia_hdr *ia, struct dhcpv6_assignment *a, struct interface *iface, bool request)
apply_lease	dhcpv6-ia.c	/^static void apply_lease(struct interface *iface, struct dhcpv6_assignment *a, bool add)$/;"	f	file:	signature:(struct interface *iface, struct dhcpv6_assignment *a, bool add)
assign_na	dhcpv6-ia.c	/^static bool assign_na(struct interface *iface, struct dhcpv6_assignment *assign)$/;"	f	file:	signature:(struct interface *iface, struct dhcpv6_assignment *assign)
assign_pd	dhcpv6-ia.c	/^static bool assign_pd(struct interface *iface, struct dhcpv6_assignment *assign)$/;"	f	file:	signature:(struct interface *iface, struct dhcpv6_assignment *assign)
assigned	dhcpv6.h	/^	uint32_t assigned;$/;"	m	struct:dhcpv6_assignment	access:public
attr_to_offset	blob.c	/^attr_to_offset(struct blob_buf *buf, struct blob_attr *attr)$/;"	f	file:	signature:(struct blob_buf *buf, struct blob_attr *attr)
attr_to_offset	blobmsg.c	/^attr_to_offset(struct blob_buf *buf, struct blob_attr *attr)$/;"	f	file:	signature:(struct blob_buf *buf, struct blob_attr *attr)
auth	dhcpv6.h	/^	uint8_t auth[16];$/;"	m	struct:dhcpv6_cer_id	access:public
auth_type	dhcpv6.h	/^	uint16_t auth_type;$/;"	m	struct:dhcpv6_cer_id	access:public
b	config.c	/^static struct blob_buf b;$/;"	v	typeref:struct:blob_buf	file:
b	config_bhu.bak.c	/^static struct blob_buf b;$/;"	v	typeref:struct:blob_buf	file:
b	md5.h	/^	uint32_t a, b, c, d;$/;"	m	struct:md5_ctx	access:public
b	ubus.c	/^static struct blob_buf b;$/;"	v	typeref:struct:blob_buf	file:
b64_decode	utils.h	/^int b64_decode(const void *src, void *dest, size_t dest_len);$/;"	p	signature:(const void *src, void *dest, size_t dest_len)
b64_encode	utils.h	/^int b64_encode(const void *src, size_t src_len,$/;"	p	signature:(const void *src, size_t src_len, void *dest, size_t dest_len)
be16_to_cpu	utils.h	125;"	d
be16_to_cpu	utils.h	151;"	d
be32_to_cpu	utils.h	124;"	d
be32_to_cpu	utils.h	150;"	d
be64_to_cpu	utils.h	123;"	d
be64_to_cpu	utils.h	149;"	d
bitfield_set	utils.h	/^static inline void bitfield_set(unsigned long *bits, int bit)$/;"	f	signature:(unsigned long *bits, int bit)
bitfield_test	utils.h	/^static inline bool bitfield_test(unsigned long *bits, int bit)$/;"	f	signature:(unsigned long *bits, int bit)
blob_add	blob.c	/^blob_add(struct blob_buf *buf, struct blob_attr *pos, int id, int payload)$/;"	f	file:	signature:(struct blob_buf *buf, struct blob_attr *pos, int id, int payload)
blob_attr	blob.h	/^struct blob_attr {$/;"	s
blob_attr::data	blob.h	/^	char data[];$/;"	m	struct:blob_attr	access:public
blob_attr::id_len	blob.h	/^	uint32_t id_len;$/;"	m	struct:blob_attr	access:public
blob_attr_equal	blob.c	/^blob_attr_equal(const struct blob_attr *a1, const struct blob_attr *a2)$/;"	f	signature:(const struct blob_attr *a1, const struct blob_attr *a2)
blob_attr_equal	blob.h	/^extern bool blob_attr_equal(const struct blob_attr *a1, const struct blob_attr *a2);$/;"	p	signature:(const struct blob_attr *a1, const struct blob_attr *a2)
blob_attr_info	blob.h	/^struct blob_attr_info {$/;"	s
blob_attr_info::maxlen	blob.h	/^	unsigned int maxlen;$/;"	m	struct:blob_attr_info	access:public
blob_attr_info::minlen	blob.h	/^	unsigned int minlen;$/;"	m	struct:blob_attr_info	access:public
blob_attr_info::type	blob.h	/^	unsigned int type;$/;"	m	struct:blob_attr_info	access:public
blob_attr_info::validate	blob.h	/^	bool (*validate)(const struct blob_attr_info *, struct blob_attr *);$/;"	m	struct:blob_attr_info	access:public
blob_buf	blob.h	/^struct blob_buf {$/;"	s
blob_buf::buf	blob.h	/^	void *buf;$/;"	m	struct:blob_buf	access:public
blob_buf::buflen	blob.h	/^	int buflen;$/;"	m	struct:blob_buf	access:public
blob_buf::grow	blob.h	/^	bool (*grow)(struct blob_buf *buf, int minlen);$/;"	m	struct:blob_buf	access:public
blob_buf::head	blob.h	/^	struct blob_attr *head;$/;"	m	struct:blob_buf	typeref:struct:blob_buf::blob_attr	access:public
blob_buf_free	blob.c	/^blob_buf_free(struct blob_buf *buf)$/;"	f	signature:(struct blob_buf *buf)
blob_buf_free	blob.h	/^extern void blob_buf_free(struct blob_buf *buf);$/;"	p	signature:(struct blob_buf *buf)
blob_buf_grow	blob.c	/^blob_buf_grow(struct blob_buf *buf, int required)$/;"	f	signature:(struct blob_buf *buf, int required)
blob_buf_grow	blob.h	/^extern bool blob_buf_grow(struct blob_buf *buf, int required);$/;"	p	signature:(struct blob_buf *buf, int required)
blob_buf_init	blob.c	/^blob_buf_init(struct blob_buf *buf, int id)$/;"	f	signature:(struct blob_buf *buf, int id)
blob_buf_init	blob.h	/^extern int blob_buf_init(struct blob_buf *buf, int id);$/;"	p	signature:(struct blob_buf *buf, int id)
blob_buffer_grow	blob.c	/^blob_buffer_grow(struct blob_buf *buf, int minlen)$/;"	f	file:	signature:(struct blob_buf *buf, int minlen)
blob_check_type	blob.c	/^blob_check_type(const void *ptr, unsigned int len, int type)$/;"	f	signature:(const void *ptr, unsigned int len, int type)
blob_check_type	blob.h	/^extern bool blob_check_type(const void *ptr, unsigned int len, int type);$/;"	p	signature:(const void *ptr, unsigned int len, int type)
blob_data	blob.h	/^blob_data(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_fill_pad	blob.c	/^blob_fill_pad(struct blob_attr *attr)$/;"	f	signature:(struct blob_attr *attr)
blob_fill_pad	blob.h	/^extern void blob_fill_pad(struct blob_attr *attr);$/;"	p	signature:(struct blob_attr *attr)
blob_for_each_attr	blob.h	249;"	d
blob_get_int16	blob.h	/^blob_get_int16(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_get_int32	blob.h	/^blob_get_int32(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_get_int64	blob.h	/^blob_get_int64(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_get_int8	blob.h	/^blob_get_int8(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_get_string	blob.h	/^blob_get_string(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_get_u16	blob.h	/^blob_get_u16(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_get_u32	blob.h	/^blob_get_u32(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_get_u64	blob.h	/^blob_get_u64(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_get_u8	blob.h	/^blob_get_u8(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_id	blob.h	/^blob_id(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_init	blob.c	/^blob_init(struct blob_attr *attr, int id, unsigned int len)$/;"	f	file:	signature:(struct blob_attr *attr, int id, unsigned int len)
blob_is_extended	blob.h	/^blob_is_extended(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_len	blob.h	/^blob_len(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_memdup	blob.c	/^blob_memdup(struct blob_attr *attr)$/;"	f	signature:(struct blob_attr *attr)
blob_memdup	blob.h	/^extern struct blob_attr *blob_memdup(struct blob_attr *attr);$/;"	p	signature:(struct blob_attr *attr)
blob_nest_end	blob.c	/^blob_nest_end(struct blob_buf *buf, void *cookie)$/;"	f	signature:(struct blob_buf *buf, void *cookie)
blob_nest_end	blob.h	/^extern void blob_nest_end(struct blob_buf *buf, void *cookie);$/;"	p	signature:(struct blob_buf *buf, void *cookie)
blob_nest_start	blob.c	/^blob_nest_start(struct blob_buf *buf, int id)$/;"	f	signature:(struct blob_buf *buf, int id)
blob_nest_start	blob.h	/^extern void *blob_nest_start(struct blob_buf *buf, int id);$/;"	p	signature:(struct blob_buf *buf, int id)
blob_new	blob.c	/^blob_new(struct blob_buf *buf, int id, int payload)$/;"	f	signature:(struct blob_buf *buf, int id, int payload)
blob_new	blob.h	/^extern struct blob_attr *blob_new(struct blob_buf *buf, int id, int payload);$/;"	p	signature:(struct blob_buf *buf, int id, int payload)
blob_next	blob.h	/^blob_next(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_pad_len	blob.h	/^blob_pad_len(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_parse	blob.c	/^blob_parse(struct blob_attr *attr, struct blob_attr **data, const struct blob_attr_info *info, int max)$/;"	f	signature:(struct blob_attr *attr, struct blob_attr **data, const struct blob_attr_info *info, int max)
blob_parse	blob.h	/^extern int blob_parse(struct blob_attr *attr, struct blob_attr **data, const struct blob_attr_info *info, int max);$/;"	p	signature:(struct blob_attr *attr, struct blob_attr **data, const struct blob_attr_info *info, int max)
blob_put	blob.c	/^blob_put(struct blob_buf *buf, int id, const void *ptr, unsigned int len)$/;"	f	signature:(struct blob_buf *buf, int id, const void *ptr, unsigned int len)
blob_put	blob.h	/^extern struct blob_attr *blob_put(struct blob_buf *buf, int id, const void *ptr, unsigned int len);$/;"	p	signature:(struct blob_buf *buf, int id, const void *ptr, unsigned int len)
blob_put_int16	blob.h	238;"	d
blob_put_int32	blob.h	239;"	d
blob_put_int64	blob.h	240;"	d
blob_put_int8	blob.h	237;"	d
blob_put_raw	blob.c	/^blob_put_raw(struct blob_buf *buf, const void *ptr, unsigned int len)$/;"	f	signature:(struct blob_buf *buf, const void *ptr, unsigned int len)
blob_put_raw	blob.h	/^extern struct blob_attr *blob_put_raw(struct blob_buf *buf, const void *ptr, unsigned int len);$/;"	p	signature:(struct blob_buf *buf, const void *ptr, unsigned int len)
blob_put_string	blob.h	/^blob_put_string(struct blob_buf *buf, int id, const char *str)$/;"	f	signature:(struct blob_buf *buf, int id, const char *str)
blob_put_u16	blob.h	/^blob_put_u16(struct blob_buf *buf, int id, uint16_t val)$/;"	f	signature:(struct blob_buf *buf, int id, uint16_t val)
blob_put_u32	blob.h	/^blob_put_u32(struct blob_buf *buf, int id, uint32_t val)$/;"	f	signature:(struct blob_buf *buf, int id, uint32_t val)
blob_put_u64	blob.h	/^blob_put_u64(struct blob_buf *buf, int id, uint64_t val)$/;"	f	signature:(struct blob_buf *buf, int id, uint64_t val)
blob_put_u8	blob.h	/^blob_put_u8(struct blob_buf *buf, int id, uint8_t val)$/;"	f	signature:(struct blob_buf *buf, int id, uint8_t val)
blob_raw_len	blob.h	/^blob_raw_len(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blob_set_raw_len	blob.c	/^blob_set_raw_len(struct blob_attr *attr, unsigned int len)$/;"	f	signature:(struct blob_attr *attr, unsigned int len)
blob_set_raw_len	blob.h	/^extern void blob_set_raw_len(struct blob_attr *attr, unsigned int len);$/;"	p	signature:(struct blob_attr *attr, unsigned int len)
blob_type	blobmsg.c	/^static const int blob_type[__BLOBMSG_TYPE_LAST] = {$/;"	v	file:
blob_type_minlen	blob.c	/^static const int blob_type_minlen[BLOB_ATTR_LAST] = {$/;"	v	file:
blobmsg_add_blob	blobmsg.h	/^blobmsg_add_blob(struct blob_buf *buf, struct blob_attr *attr)$/;"	f	signature:(struct blob_buf *buf, struct blob_attr *attr)
blobmsg_add_field	blobmsg.c	/^blobmsg_add_field(struct blob_buf *buf, int type, const char *name,$/;"	f	signature:(struct blob_buf *buf, int type, const char *name, const void *data, unsigned int len)
blobmsg_add_field	blobmsg.h	/^int blobmsg_add_field(struct blob_buf *buf, int type, const char *name,$/;"	p	signature:(struct blob_buf *buf, int type, const char *name, const void *data, unsigned int len)
blobmsg_add_string	blobmsg.h	/^blobmsg_add_string(struct blob_buf *buf, const char *name, const char *string)$/;"	f	signature:(struct blob_buf *buf, const char *name, const char *string)
blobmsg_add_string_buffer	blobmsg.c	/^blobmsg_add_string_buffer(struct blob_buf *buf)$/;"	f	signature:(struct blob_buf *buf)
blobmsg_add_string_buffer	blobmsg.h	/^void blobmsg_add_string_buffer(struct blob_buf *buf);$/;"	p	signature:(struct blob_buf *buf)
blobmsg_add_u16	blobmsg.h	/^blobmsg_add_u16(struct blob_buf *buf, const char *name, uint16_t val)$/;"	f	signature:(struct blob_buf *buf, const char *name, uint16_t val)
blobmsg_add_u32	blobmsg.h	/^blobmsg_add_u32(struct blob_buf *buf, const char *name, uint32_t val)$/;"	f	signature:(struct blob_buf *buf, const char *name, uint32_t val)
blobmsg_add_u64	blobmsg.h	/^blobmsg_add_u64(struct blob_buf *buf, const char *name, uint64_t val)$/;"	f	signature:(struct blob_buf *buf, const char *name, uint64_t val)
blobmsg_add_u8	blobmsg.h	/^blobmsg_add_u8(struct blob_buf *buf, const char *name, uint8_t val)$/;"	f	signature:(struct blob_buf *buf, const char *name, uint8_t val)
blobmsg_alloc_string_buffer	blobmsg.c	/^blobmsg_alloc_string_buffer(struct blob_buf *buf, const char *name, unsigned int maxlen)$/;"	f	signature:(struct blob_buf *buf, const char *name, unsigned int maxlen)
blobmsg_alloc_string_buffer	blobmsg.h	/^void *blobmsg_alloc_string_buffer(struct blob_buf *buf, const char *name, unsigned int maxlen);$/;"	p	signature:(struct blob_buf *buf, const char *name, unsigned int maxlen)
blobmsg_buf_init	blobmsg.h	/^static inline int blobmsg_buf_init(struct blob_buf *buf)$/;"	f	signature:(struct blob_buf *buf)
blobmsg_check_array	blobmsg.c	/^int blobmsg_check_array(const struct blob_attr *attr, int type)$/;"	f	signature:(const struct blob_attr *attr, int type)
blobmsg_check_array	blobmsg.h	/^int blobmsg_check_array(const struct blob_attr *attr, int type);$/;"	p	signature:(const struct blob_attr *attr, int type)
blobmsg_check_attr	blobmsg.c	/^bool blobmsg_check_attr(const struct blob_attr *attr, bool name)$/;"	f	signature:(const struct blob_attr *attr, bool name)
blobmsg_check_attr	blobmsg.h	/^bool blobmsg_check_attr(const struct blob_attr *attr, bool name);$/;"	p	signature:(const struct blob_attr *attr, bool name)
blobmsg_check_attr_list	blobmsg.c	/^bool blobmsg_check_attr_list(const struct blob_attr *attr, int type)$/;"	f	signature:(const struct blob_attr *attr, int type)
blobmsg_check_attr_list	blobmsg.h	/^bool blobmsg_check_attr_list(const struct blob_attr *attr, int type);$/;"	p	signature:(const struct blob_attr *attr, int type)
blobmsg_clear_name	blobmsg.h	/^static inline void blobmsg_clear_name(struct blob_attr *attr)$/;"	f	signature:(struct blob_attr *attr)
blobmsg_close_array	blobmsg.h	/^blobmsg_close_array(struct blob_buf *buf, void *cookie)$/;"	f	signature:(struct blob_buf *buf, void *cookie)
blobmsg_close_table	blobmsg.h	/^blobmsg_close_table(struct blob_buf *buf, void *cookie)$/;"	f	signature:(struct blob_buf *buf, void *cookie)
blobmsg_data	blobmsg.h	/^static inline void *blobmsg_data(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blobmsg_data_len	blobmsg.h	/^static inline int blobmsg_data_len(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blobmsg_for_each_attr	blobmsg.h	234;"	d
blobmsg_get_bool	blobmsg.h	/^static inline bool blobmsg_get_bool(struct blob_attr *attr)$/;"	f	signature:(struct blob_attr *attr)
blobmsg_get_string	blobmsg.h	/^static inline char *blobmsg_get_string(struct blob_attr *attr)$/;"	f	signature:(struct blob_attr *attr)
blobmsg_get_u16	blobmsg.h	/^static inline uint16_t blobmsg_get_u16(struct blob_attr *attr)$/;"	f	signature:(struct blob_attr *attr)
blobmsg_get_u32	blobmsg.h	/^static inline uint32_t blobmsg_get_u32(struct blob_attr *attr)$/;"	f	signature:(struct blob_attr *attr)
blobmsg_get_u64	blobmsg.h	/^static inline uint64_t blobmsg_get_u64(struct blob_attr *attr)$/;"	f	signature:(struct blob_attr *attr)
blobmsg_get_u8	blobmsg.h	/^static inline uint8_t blobmsg_get_u8(struct blob_attr *attr)$/;"	f	signature:(struct blob_attr *attr)
blobmsg_hdr	blobmsg.h	/^struct blobmsg_hdr {$/;"	s
blobmsg_hdr::name	blobmsg.h	/^	uint8_t name[];$/;"	m	struct:blobmsg_hdr	access:public
blobmsg_hdr::namelen	blobmsg.h	/^	uint16_t namelen;$/;"	m	struct:blobmsg_hdr	access:public
blobmsg_hdrlen	blobmsg.h	/^static inline int blobmsg_hdrlen(unsigned int namelen)$/;"	f	signature:(unsigned int namelen)
blobmsg_len	blobmsg.h	/^static inline int blobmsg_len(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blobmsg_name	blobmsg.h	/^static inline const char *blobmsg_name(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blobmsg_namelen	blobmsg.c	/^blobmsg_namelen(const struct blobmsg_hdr *hdr)$/;"	f	file:	signature:(const struct blobmsg_hdr *hdr)
blobmsg_new	blobmsg.c	/^blobmsg_new(struct blob_buf *buf, int type, const char *name, int payload_len, void **data)$/;"	f	file:	signature:(struct blob_buf *buf, int type, const char *name, int payload_len, void **data)
blobmsg_open_array	blobmsg.h	/^blobmsg_open_array(struct blob_buf *buf, const char *name)$/;"	f	signature:(struct blob_buf *buf, const char *name)
blobmsg_open_nested	blobmsg.c	/^blobmsg_open_nested(struct blob_buf *buf, const char *name, bool array)$/;"	f	signature:(struct blob_buf *buf, const char *name, bool array)
blobmsg_open_nested	blobmsg.h	/^void *blobmsg_open_nested(struct blob_buf *buf, const char *name, bool array);$/;"	p	signature:(struct blob_buf *buf, const char *name, bool array)
blobmsg_open_table	blobmsg.h	/^blobmsg_open_table(struct blob_buf *buf, const char *name)$/;"	f	signature:(struct blob_buf *buf, const char *name)
blobmsg_parse	blobmsg.c	/^int blobmsg_parse(const struct blobmsg_policy *policy, int policy_len,$/;"	f	signature:(const struct blobmsg_policy *policy, int policy_len, struct blob_attr **tb, void *data, unsigned int len)
blobmsg_parse	blobmsg.h	/^int blobmsg_parse(const struct blobmsg_policy *policy, int policy_len,$/;"	p	signature:(const struct blobmsg_policy *policy, int policy_len, struct blob_attr **tb, void *data, unsigned int len)
blobmsg_parse_array	blobmsg.c	/^int blobmsg_parse_array(const struct blobmsg_policy *policy, int policy_len,$/;"	f	signature:(const struct blobmsg_policy *policy, int policy_len, struct blob_attr **tb, void *data, unsigned int len)
blobmsg_parse_array	blobmsg.h	/^int blobmsg_parse_array(const struct blobmsg_policy *policy, int policy_len,$/;"	p	signature:(const struct blobmsg_policy *policy, int policy_len, struct blob_attr **tb, void *data, unsigned int len)
blobmsg_policy	blobmsg.h	/^struct blobmsg_policy {$/;"	s
blobmsg_policy::name	blobmsg.h	/^	const char *name;$/;"	m	struct:blobmsg_policy	access:public
blobmsg_policy::type	blobmsg.h	/^	enum blobmsg_type type;$/;"	m	struct:blobmsg_policy	typeref:enum:blobmsg_policy::blobmsg_type	access:public
blobmsg_printf	blobmsg.c	/^blobmsg_printf(struct blob_buf *buf, const char *name, const char *format, ...)$/;"	f	signature:(struct blob_buf *buf, const char *name, const char *format, ...)
blobmsg_printf	blobmsg.h	/^void blobmsg_printf(struct blob_buf *buf, const char *name, const char *format, ...)$/;"	p	signature:(struct blob_buf *buf, const char *name, const char *format, ...)
blobmsg_realloc_string_buffer	blobmsg.c	/^blobmsg_realloc_string_buffer(struct blob_buf *buf, unsigned int maxlen)$/;"	f	signature:(struct blob_buf *buf, unsigned int maxlen)
blobmsg_realloc_string_buffer	blobmsg.h	/^void *blobmsg_realloc_string_buffer(struct blob_buf *buf, unsigned int maxlen);$/;"	p	signature:(struct blob_buf *buf, unsigned int maxlen)
blobmsg_type	blobmsg.h	/^enum blobmsg_type {$/;"	g
blobmsg_type	blobmsg.h	/^static inline int blobmsg_type(const struct blob_attr *attr)$/;"	f	signature:(const struct blob_attr *attr)
blobmsg_vprintf	blobmsg.c	/^blobmsg_vprintf(struct blob_buf *buf, const char *name, const char *format, va_list arg)$/;"	f	signature:(struct blob_buf *buf, const char *name, const char *format, va_list arg)
blobmsg_vprintf	blobmsg.h	/^void blobmsg_vprintf(struct blob_buf *buf, const char *name, const char *format, va_list arg);$/;"	p	signature:(struct blob_buf *buf, const char *name, const char *format, va_list arg)
body	md5.c	/^static const void *body(md5_ctx_t *ctx, const void *data, unsigned long size)$/;"	f	file:	signature:(md5_ctx_t *ctx, const void *data, unsigned long size)
bpf	ndp.c	/^static struct sock_filter bpf[] = {$/;"	v	typeref:struct:sock_filter	file:
bpf_prog	ndp.c	/^static const struct sock_fprog bpf_prog = {sizeof(bpf) \/ sizeof(*bpf), bpf};$/;"	v	typeref:struct:sock_fprog	file:
bswap_32	utils.h	82;"	d
bswap_32	utils.h	86;"	d
bswap_32	utils.h	90;"	d
bswap_64	utils.h	83;"	d
bswap_64	utils.h	87;"	d
bswap_64	utils.h	91;"	d
buf	blob.h	/^	void *buf;$/;"	m	struct:blob_buf	access:public
buffer	md5.h	/^	unsigned char buffer[64];$/;"	m	struct:md5_ctx	access:public
buffer_len	ustream.h	/^	int buffer_len;$/;"	m	struct:ustream_buf_list	access:public
buffers	ustream.h	/^	int buffers;$/;"	m	struct:ustream_buf_list	access:public
buflen	blob.h	/^	int buflen;$/;"	m	struct:blob_buf	access:public
c	md5.h	/^	uint32_t a, b, c, d;$/;"	m	struct:md5_ctx	access:public
calloc_a	utils.h	37;"	d
catch_rtnetlink	ndp.c	/^static void catch_rtnetlink(int error)$/;"	f	file:	signature:(int error)
catch_rtnetlink	ndp.c	/^static void catch_rtnetlink(int error);$/;"	p	file:	signature:(int error)
cb	uloop.h	/^	uloop_fd_handler cb;$/;"	m	struct:uloop_fd	access:public
cb	uloop.h	/^	uloop_process_handler cb;$/;"	m	struct:uloop_process	access:public
cb	uloop.h	/^	uloop_timeout_handler cb;$/;"	m	struct:uloop_timeout	access:public
chaddr	dhcpv4.h	/^	uint8_t chaddr[16];$/;"	m	struct:dhcpv4_message	access:public
check_updates	ndp.c	/^static void check_updates(struct interface *iface)$/;"	f	file:	signature:(struct interface *iface)
ciaddr	dhcpv4.h	/^	struct in_addr ciaddr;$/;"	m	struct:dhcpv4_message	typeref:struct:dhcpv4_message::in_addr	access:public
clean_interface	config.c	/^static void clean_interface(struct interface *iface)$/;"	f	file:	signature:(struct interface *iface)
clean_interface	config_bhu.bak.c	/^static void clean_interface(struct interface *iface)$/;"	f	file:	signature:(struct interface *iface)
clean_interface	config_bhu.c	/^static void clean_interface(struct interface *iface)$/;"	f	file:	signature:(struct interface *iface)
clid_data	dhcpv6.h	/^	uint8_t clid_data[];$/;"	m	struct:dhcpv6_assignment	access:public
clid_len	dhcpv6.h	/^	uint8_t clid_len;$/;"	m	struct:dhcpv6_assignment	access:public
clock_gettime	utils.c	/^int clock_gettime(int type, struct timespec *tv)$/;"	f	signature:(int type, struct timespec *tv)
clock_gettime	utils.h	/^int clock_gettime(int type, struct timespec *tv);$/;"	p	signature:(int type, struct timespec *tv)
clock_monotonic	utils.c	/^static clock_serv_t clock_monotonic;$/;"	v	file:
clock_name_dealloc	utils.c	/^static void __destructor clock_name_dealloc(void)$/;"	f	file:	signature:(void)
clock_name_init	utils.c	/^static void __constructor clock_name_init(void)$/;"	f	file:	signature:(void)
clock_realtime	utils.c	/^static clock_serv_t clock_realtime;$/;"	v	file:
close_interface	config.c	/^static void close_interface(struct interface *iface)$/;"	f	file:	signature:(struct interface *iface)
close_interface	config_bhu.bak.c	/^static void close_interface(struct interface *iface)$/;"	f	file:	signature:(struct interface *iface)
close_interface	config_bhu.c	/^static void close_interface(struct interface *iface)$/;"	f	file:	signature:(struct interface *iface)
config	config.c	/^struct config config = {false, NULL, NULL};$/;"	v	typeref:struct:config
config	config_bhu.bak.c	/^struct config config = {false, NULL, NULL};$/;"	v	typeref:struct:config
config	config_bhu.c	/^struct config config = {false, NULL, NULL};$/;"	v	typeref:struct:config
config	odhcpd.h	/^struct config {$/;"	s
config	odhcpd.h	/^} config;$/;"	v	typeref:struct:config
config::dhcp_cb	odhcpd.h	/^	char *dhcp_cb;$/;"	m	struct:config	access:public
config::dhcp_statefile	odhcpd.h	/^	char *dhcp_statefile;$/;"	m	struct:config	access:public
config::legacy	odhcpd.h	/^	bool legacy;$/;"	m	struct:config	access:public
config_interface	config_bhu.c	/^int config_interface(const char *name, const char *ifname, const char *dns)$/;"	f	signature:(const char *name, const char *ifname, const char *dns)
config_parse_interface	config.c	/^int config_parse_interface(void *data, size_t len, const char *name, bool overwrite)$/;"	f	signature:(void *data, size_t len, const char *name, bool overwrite)
config_parse_interface	odhcpd.h	/^int config_parse_interface(void *data, size_t len, const char *iname, bool overwrite);$/;"	p	signature:(void *data, size_t len, const char *iname, bool overwrite)
container_of	list.h	38;"	d
container_of	odhcpd.h	32;"	d
cpu_to_be16	utils.h	121;"	d
cpu_to_be16	utils.h	147;"	d
cpu_to_be32	utils.h	120;"	d
cpu_to_be32	utils.h	146;"	d
cpu_to_be64	utils.h	119;"	d
cpu_to_be64	utils.h	145;"	d
cpu_to_le16	utils.h	129;"	d
cpu_to_le16	utils.h	139;"	d
cpu_to_le32	utils.h	128;"	d
cpu_to_le32	utils.h	138;"	d
cpu_to_le64	utils.h	127;"	d
cpu_to_le64	utils.h	137;"	d
cur_fd	uloop.c	/^static int cur_fd, cur_nfds;$/;"	v	file:
cur_fds	uloop.c	/^static struct uloop_fd_event cur_fds[ULOOP_MAX_EVENTS];$/;"	v	typeref:struct:uloop_fd_event	file:
cur_nfds	uloop.c	/^static int cur_fd, cur_nfds;$/;"	v	file:
d	md5.h	/^	uint32_t a, b, c, d;$/;"	m	struct:md5_ctx	access:public
data	blob.h	/^	char data[];$/;"	m	struct:blob_attr	access:public
data	dhcpv4.h	/^	uint8_t data[];$/;"	m	struct:dhcpv4_option	access:public
data	router.h	/^	uint8_t data[6];$/;"	m	struct:icmpv6_opt	access:public
data	ustream.h	/^	char *data;$/;"	m	struct:ustream_buf	access:public
data_bytes	ustream.h	/^	int data_bytes;$/;"	m	struct:ustream_buf_list	access:public
data_tail	ustream.h	/^	struct ustream_buf *data_tail;$/;"	m	struct:ustream_buf_list	typeref:struct:ustream_buf_list::ustream_buf	access:public
default_router	odhcpd.h	/^	int default_router;$/;"	m	struct:interface	access:public
dhcp_cb	odhcpd.h	/^	char *dhcp_cb;$/;"	m	struct:config	access:public
dhcp_statefile	odhcpd.h	/^	char *dhcp_statefile;$/;"	m	struct:config	access:public
dhcpv4	odhcpd.h	/^	enum odhcpd_mode dhcpv4;$/;"	m	struct:interface	typeref:enum:interface::odhcpd_mode	access:public
dhcpv4_assign	dhcpv4.c	/^static bool dhcpv4_assign(struct interface *iface,$/;"	f	file:	signature:(struct interface *iface, struct dhcpv4_assignment *assign, uint32_t raddr)
dhcpv4_assignment	dhcpv4.h	/^struct dhcpv4_assignment {$/;"	s
dhcpv4_assignment::addr	dhcpv4.h	/^	uint32_t addr;$/;"	m	struct:dhcpv4_assignment	access:public
dhcpv4_assignment::head	dhcpv4.h	/^	struct list_head head;$/;"	m	struct:dhcpv4_assignment	typeref:struct:dhcpv4_assignment::list_head	access:public
dhcpv4_assignment::hostname	dhcpv4.h	/^	char hostname[];$/;"	m	struct:dhcpv4_assignment	access:public
dhcpv4_assignment::hwaddr	dhcpv4.h	/^	uint8_t hwaddr[6];$/;"	m	struct:dhcpv4_assignment	access:public
dhcpv4_assignment::leasetime	dhcpv4.h	/^	uint32_t leasetime;$/;"	m	struct:dhcpv4_assignment	access:public
dhcpv4_assignment::valid_until	dhcpv4.h	/^	time_t valid_until;$/;"	m	struct:dhcpv4_assignment	access:public
dhcpv4_assignments	odhcpd.h	/^	struct list_head dhcpv4_assignments;$/;"	m	struct:interface	typeref:struct:interface::list_head	access:public
dhcpv4_dns	odhcpd.h	/^	struct in_addr *dhcpv4_dns;$/;"	m	struct:interface	typeref:struct:interface::in_addr	access:public
dhcpv4_dns_cnt	odhcpd.h	/^	size_t dhcpv4_dns_cnt;$/;"	m	struct:interface	access:public
dhcpv4_end	odhcpd.h	/^	struct in_addr dhcpv4_end;$/;"	m	struct:interface	typeref:struct:interface::in_addr	access:public
dhcpv4_event	odhcpd.h	/^	struct odhcpd_event dhcpv4_event;$/;"	m	struct:interface	typeref:struct:interface::odhcpd_event	access:public
dhcpv4_for_each_option	dhcpv4.h	92;"	d
dhcpv4_lease	dhcpv4.c	/^static struct dhcpv4_assignment* dhcpv4_lease(struct interface *iface,$/;"	f	file:	signature:(struct interface *iface, enum dhcpv4_msg msg, const uint8_t *mac, struct in_addr reqaddr, const char *hostname)
dhcpv4_lease	dhcpv4.c	/^static struct dhcpv4_assignment* dhcpv4_lease(struct interface *iface,$/;"	p	file:	signature:(struct interface *iface, enum dhcpv4_msg msg, const uint8_t *mac, struct in_addr reqaddr, const char *hostname)
dhcpv4_leasetime	odhcpd.h	/^	uint32_t dhcpv4_leasetime;$/;"	m	struct:interface	access:public
dhcpv4_leasetime	odhcpd.h	/^	uint32_t dhcpv4_leasetime;$/;"	m	struct:lease	access:public
dhcpv4_message	dhcpv4.h	/^struct dhcpv4_message {$/;"	s
dhcpv4_message::chaddr	dhcpv4.h	/^	uint8_t chaddr[16];$/;"	m	struct:dhcpv4_message	access:public
dhcpv4_message::ciaddr	dhcpv4.h	/^	struct in_addr ciaddr;$/;"	m	struct:dhcpv4_message	typeref:struct:dhcpv4_message::in_addr	access:public
dhcpv4_message::file	dhcpv4.h	/^	char file[128];$/;"	m	struct:dhcpv4_message	access:public
dhcpv4_message::flags	dhcpv4.h	/^	uint16_t flags;$/;"	m	struct:dhcpv4_message	access:public
dhcpv4_message::giaddr	dhcpv4.h	/^	struct in_addr giaddr;$/;"	m	struct:dhcpv4_message	typeref:struct:dhcpv4_message::in_addr	access:public
dhcpv4_message::hlen	dhcpv4.h	/^	uint8_t hlen;$/;"	m	struct:dhcpv4_message	access:public
dhcpv4_message::hops	dhcpv4.h	/^	uint8_t hops;$/;"	m	struct:dhcpv4_message	access:public
dhcpv4_message::htype	dhcpv4.h	/^	uint8_t htype;$/;"	m	struct:dhcpv4_message	access:public
dhcpv4_message::op	dhcpv4.h	/^	uint8_t op;$/;"	m	struct:dhcpv4_message	access:public
dhcpv4_message::options	dhcpv4.h	/^	uint8_t options[312];$/;"	m	struct:dhcpv4_message	access:public
dhcpv4_message::secs	dhcpv4.h	/^	uint16_t secs;$/;"	m	struct:dhcpv4_message	access:public
dhcpv4_message::siaddr	dhcpv4.h	/^	struct in_addr siaddr;$/;"	m	struct:dhcpv4_message	typeref:struct:dhcpv4_message::in_addr	access:public
dhcpv4_message::sname	dhcpv4.h	/^	char sname[64];$/;"	m	struct:dhcpv4_message	access:public
dhcpv4_message::xid	dhcpv4.h	/^	uint32_t xid;$/;"	m	struct:dhcpv4_message	access:public
dhcpv4_message::yiaddr	dhcpv4.h	/^	struct in_addr yiaddr;$/;"	m	struct:dhcpv4_message	typeref:struct:dhcpv4_message::in_addr	access:public
dhcpv4_msg	dhcpv4.h	/^enum dhcpv4_msg {$/;"	g
dhcpv4_msg_to_string	dhcpv4.c	/^char *dhcpv4_msg_to_string(uint8_t reqmsg)$/;"	f	signature:(uint8_t reqmsg)
dhcpv4_op	dhcpv4.h	/^enum dhcpv4_op {$/;"	g
dhcpv4_opt	dhcpv4.h	/^enum dhcpv4_opt {$/;"	g
dhcpv4_option	dhcpv4.h	/^struct dhcpv4_option {$/;"	s
dhcpv4_option::data	dhcpv4.h	/^	uint8_t data[];$/;"	m	struct:dhcpv4_option	access:public
dhcpv4_option::len	dhcpv4.h	/^	uint8_t len;$/;"	m	struct:dhcpv4_option	access:public
dhcpv4_option::type	dhcpv4.h	/^	uint8_t type;$/;"	m	struct:dhcpv4_option	access:public
dhcpv4_put	dhcpv4.c	/^static void dhcpv4_put(struct dhcpv4_message *msg, uint8_t **cookie,$/;"	f	file:	signature:(struct dhcpv4_message *msg, uint8_t **cookie, uint8_t type, uint8_t len, const void *data)
dhcpv4_router	odhcpd.h	/^	struct in_addr *dhcpv4_router;$/;"	m	struct:interface	typeref:struct:interface::in_addr	access:public
dhcpv4_router_cnt	odhcpd.h	/^	size_t dhcpv4_router_cnt;$/;"	m	struct:interface	access:public
dhcpv4_start	odhcpd.h	/^	struct in_addr dhcpv4_start;$/;"	m	struct:interface	typeref:struct:interface::in_addr	access:public
dhcpv4_test	dhcpv4.c	/^static bool dhcpv4_test(struct interface *iface, uint32_t try)$/;"	f	file:	signature:(struct interface *iface, uint32_t try)
dhcpv6	odhcpd.h	/^	enum odhcpd_mode dhcpv6;$/;"	m	struct:interface	typeref:enum:interface::odhcpd_mode	access:public
dhcpv6_assignment	dhcpv6.h	/^struct dhcpv6_assignment {$/;"	s
dhcpv6_assignment::accept_reconf	dhcpv6.h	/^	bool accept_reconf;$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::assigned	dhcpv6.h	/^	uint32_t assigned;$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::clid_data	dhcpv6.h	/^	uint8_t clid_data[];$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::clid_len	dhcpv6.h	/^	uint8_t clid_len;$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::head	dhcpv6.h	/^	struct list_head head;$/;"	m	struct:dhcpv6_assignment	typeref:struct:dhcpv6_assignment::list_head	access:public
dhcpv6_assignment::hostname	dhcpv6.h	/^	char *hostname;$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::iaid	dhcpv6.h	/^	uint32_t iaid;$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::key	dhcpv6.h	/^	uint8_t key[16];$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::leasetime	dhcpv6.h	/^	uint32_t leasetime;$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::length	dhcpv6.h	/^	uint8_t length; \/\/ length == 128 -> IA_NA, length <= 64 -> IA_PD$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::mac	dhcpv6.h	/^	uint8_t mac[6];$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::managed	dhcpv6.h	/^	struct odhcpd_ipaddr *managed;$/;"	m	struct:dhcpv6_assignment	typeref:struct:dhcpv6_assignment::odhcpd_ipaddr	access:public
dhcpv6_assignment::managed_size	dhcpv6.h	/^	ssize_t managed_size;$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::managed_sock	dhcpv6.h	/^	struct ustream_fd managed_sock;$/;"	m	struct:dhcpv6_assignment	typeref:struct:dhcpv6_assignment::ustream_fd	access:public
dhcpv6_assignment::peer	dhcpv6.h	/^	struct sockaddr_in6 peer;$/;"	m	struct:dhcpv6_assignment	typeref:struct:dhcpv6_assignment::sockaddr_in6	access:public
dhcpv6_assignment::reconf_cnt	dhcpv6.h	/^	int reconf_cnt;$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::reconf_sent	dhcpv6.h	/^	time_t reconf_sent;$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_assignment::valid_until	dhcpv6.h	/^	time_t valid_until;$/;"	m	struct:dhcpv6_assignment	access:public
dhcpv6_auth_reconfigure	dhcpv6.h	/^struct dhcpv6_auth_reconfigure {$/;"	s
dhcpv6_auth_reconfigure::algorithm	dhcpv6.h	/^	uint8_t algorithm;$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
dhcpv6_auth_reconfigure::key	dhcpv6.h	/^	uint8_t key[16];$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
dhcpv6_auth_reconfigure::len	dhcpv6.h	/^	uint16_t len;$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
dhcpv6_auth_reconfigure::protocol	dhcpv6.h	/^	uint8_t protocol;$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
dhcpv6_auth_reconfigure::rdm	dhcpv6.h	/^	uint8_t rdm;$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
dhcpv6_auth_reconfigure::reconf_type	dhcpv6.h	/^	uint8_t reconf_type;$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
dhcpv6_auth_reconfigure::replay	dhcpv6.h	/^	uint32_t replay[2];$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
dhcpv6_auth_reconfigure::type	dhcpv6.h	/^	uint16_t type;$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
dhcpv6_cer_id	dhcpv6.h	/^struct dhcpv6_cer_id {$/;"	s
dhcpv6_cer_id::addr	dhcpv6.h	/^	struct in6_addr addr;$/;"	m	struct:dhcpv6_cer_id	typeref:struct:dhcpv6_cer_id::in6_addr	access:public
dhcpv6_cer_id::auth	dhcpv6.h	/^	uint8_t auth[16];$/;"	m	struct:dhcpv6_cer_id	access:public
dhcpv6_cer_id::auth_type	dhcpv6.h	/^	uint16_t auth_type;$/;"	m	struct:dhcpv6_cer_id	access:public
dhcpv6_cer_id::len	dhcpv6.h	/^	uint16_t len;$/;"	m	struct:dhcpv6_cer_id	access:public
dhcpv6_cer_id::reserved	dhcpv6.h	/^	uint16_t reserved;$/;"	m	struct:dhcpv6_cer_id	access:public
dhcpv6_cer_id::type	dhcpv6.h	/^	uint16_t type;$/;"	m	struct:dhcpv6_cer_id	access:public
dhcpv6_client_header	dhcpv6.h	/^struct dhcpv6_client_header {$/;"	s
dhcpv6_client_header::msg_type	dhcpv6.h	/^	uint8_t msg_type;$/;"	m	struct:dhcpv6_client_header	access:public
dhcpv6_client_header::transaction_id	dhcpv6.h	/^	uint8_t transaction_id[3];$/;"	m	struct:dhcpv6_client_header	access:public
dhcpv6_event	odhcpd.h	/^	struct odhcpd_event dhcpv6_event;$/;"	m	struct:interface	typeref:struct:interface::odhcpd_event	access:public
dhcpv6_for_each_option	dhcpv6.h	176;"	d
dhcpv6_handle_ia	dhcpv6-ia.c	/^ssize_t dhcpv6_handle_ia(uint8_t *buf, size_t buflen, struct interface *iface,$/;"	f	signature:(uint8_t *buf, size_t buflen, struct interface *iface, const struct sockaddr_in6 *addr, const void *data, const uint8_t *end)
dhcpv6_handle_ia	dhcpv6.h	/^ssize_t dhcpv6_handle_ia(uint8_t *buf, size_t buflen, struct interface *iface,$/;"	p	signature:(uint8_t *buf, size_t buflen, struct interface *iface, const struct sockaddr_in6 *addr, const void *data, const uint8_t *end)
dhcpv6_ia_addr	dhcpv6.h	/^struct dhcpv6_ia_addr {$/;"	s
dhcpv6_ia_addr::addr	dhcpv6.h	/^	struct in6_addr addr;$/;"	m	struct:dhcpv6_ia_addr	typeref:struct:dhcpv6_ia_addr::in6_addr	access:public
dhcpv6_ia_addr::len	dhcpv6.h	/^	uint16_t len;$/;"	m	struct:dhcpv6_ia_addr	access:public
dhcpv6_ia_addr::preferred	dhcpv6.h	/^	uint32_t preferred;$/;"	m	struct:dhcpv6_ia_addr	access:public
dhcpv6_ia_addr::type	dhcpv6.h	/^	uint16_t type;$/;"	m	struct:dhcpv6_ia_addr	access:public
dhcpv6_ia_addr::valid	dhcpv6.h	/^	uint32_t valid;$/;"	m	struct:dhcpv6_ia_addr	access:public
dhcpv6_ia_hdr	dhcpv6.h	/^struct dhcpv6_ia_hdr {$/;"	s
dhcpv6_ia_hdr::iaid	dhcpv6.h	/^	uint32_t iaid;$/;"	m	struct:dhcpv6_ia_hdr	access:public
dhcpv6_ia_hdr::len	dhcpv6.h	/^	uint16_t len;$/;"	m	struct:dhcpv6_ia_hdr	access:public
dhcpv6_ia_hdr::t1	dhcpv6.h	/^	uint32_t t1;$/;"	m	struct:dhcpv6_ia_hdr	access:public
dhcpv6_ia_hdr::t2	dhcpv6.h	/^	uint32_t t2;$/;"	m	struct:dhcpv6_ia_hdr	access:public
dhcpv6_ia_hdr::type	dhcpv6.h	/^	uint16_t type;$/;"	m	struct:dhcpv6_ia_hdr	access:public
dhcpv6_ia_init	dhcpv6-ia.c	/^int dhcpv6_ia_init(void)$/;"	f	signature:(void)
dhcpv6_ia_init	dhcpv6.h	/^int dhcpv6_ia_init(void);$/;"	p	signature:(void)
dhcpv6_ia_postupdate	dhcpv6-ia.c	/^void dhcpv6_ia_postupdate(struct interface *iface, time_t now)$/;"	f	signature:(struct interface *iface, time_t now)
dhcpv6_ia_postupdate	dhcpv6.h	/^void dhcpv6_ia_postupdate(struct interface *iface, time_t now);$/;"	p	signature:(struct interface *iface, time_t now)
dhcpv6_ia_prefix	dhcpv6.h	/^struct dhcpv6_ia_prefix {$/;"	s
dhcpv6_ia_prefix::addr	dhcpv6.h	/^	struct in6_addr addr;$/;"	m	struct:dhcpv6_ia_prefix	typeref:struct:dhcpv6_ia_prefix::in6_addr	access:public
dhcpv6_ia_prefix::len	dhcpv6.h	/^	uint16_t len;$/;"	m	struct:dhcpv6_ia_prefix	access:public
dhcpv6_ia_prefix::preferred	dhcpv6.h	/^	uint32_t preferred;$/;"	m	struct:dhcpv6_ia_prefix	access:public
dhcpv6_ia_prefix::prefix	dhcpv6.h	/^	uint8_t prefix;$/;"	m	struct:dhcpv6_ia_prefix	access:public
dhcpv6_ia_prefix::type	dhcpv6.h	/^	uint16_t type;$/;"	m	struct:dhcpv6_ia_prefix	access:public
dhcpv6_ia_prefix::valid	dhcpv6.h	/^	uint32_t valid;$/;"	m	struct:dhcpv6_ia_prefix	access:public
dhcpv6_ia_preupdate	dhcpv6-ia.c	/^void dhcpv6_ia_preupdate(struct interface *iface)$/;"	f	signature:(struct interface *iface)
dhcpv6_ia_preupdate	dhcpv6.h	/^void dhcpv6_ia_preupdate(struct interface *iface);$/;"	p	signature:(struct interface *iface)
dhcpv6_init_ia	dhcpv6.h	/^int dhcpv6_init_ia(struct interface *iface, int socket);$/;"	p	signature:(struct interface *iface, int socket)
dhcpv6_log	dhcpv6-ia.c	/^static void dhcpv6_log(uint8_t msgtype, struct interface *iface, time_t now,$/;"	f	file:	signature:(uint8_t msgtype, struct interface *iface, time_t now, const char *duidbuf, bool is_pd, struct dhcpv6_assignment *a, int code)
dhcpv6_pd_cer	odhcpd.h	/^	struct in6_addr dhcpv6_pd_cer;$/;"	m	struct:interface	typeref:struct:interface::in6_addr	access:public
dhcpv6_pd_manager	odhcpd.h	/^	char dhcpv6_pd_manager[128];$/;"	m	struct:interface	access:public
dhcpv6_raw	odhcpd.h	/^	void *dhcpv6_raw;$/;"	m	struct:interface	access:public
dhcpv6_raw_len	odhcpd.h	/^	size_t dhcpv6_raw_len;$/;"	m	struct:interface	access:public
dhcpv6_relay_forward_envelope	dhcpv6.h	/^struct dhcpv6_relay_forward_envelope {$/;"	s
dhcpv6_relay_forward_envelope::hop_count	dhcpv6.h	/^	uint8_t hop_count;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
dhcpv6_relay_forward_envelope::interface_id_data	dhcpv6.h	/^	uint32_t interface_id_data;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
dhcpv6_relay_forward_envelope::interface_id_len	dhcpv6.h	/^	uint16_t interface_id_len;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
dhcpv6_relay_forward_envelope::interface_id_type	dhcpv6.h	/^	uint16_t interface_id_type;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
dhcpv6_relay_forward_envelope::link_address	dhcpv6.h	/^	struct in6_addr link_address;$/;"	m	struct:dhcpv6_relay_forward_envelope	typeref:struct:dhcpv6_relay_forward_envelope::in6_addr	access:public
dhcpv6_relay_forward_envelope::msg_type	dhcpv6.h	/^	uint8_t msg_type;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
dhcpv6_relay_forward_envelope::peer_address	dhcpv6.h	/^	struct in6_addr peer_address;$/;"	m	struct:dhcpv6_relay_forward_envelope	typeref:struct:dhcpv6_relay_forward_envelope::in6_addr	access:public
dhcpv6_relay_forward_envelope::relay_message_len	dhcpv6.h	/^	uint16_t relay_message_len;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
dhcpv6_relay_forward_envelope::relay_message_type	dhcpv6.h	/^	uint16_t relay_message_type;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
dhcpv6_relay_header	dhcpv6.h	/^struct dhcpv6_relay_header {$/;"	s
dhcpv6_relay_header::hop_count	dhcpv6.h	/^	uint8_t hop_count;$/;"	m	struct:dhcpv6_relay_header	access:public
dhcpv6_relay_header::link_address	dhcpv6.h	/^	struct in6_addr link_address;$/;"	m	struct:dhcpv6_relay_header	typeref:struct:dhcpv6_relay_header::in6_addr	access:public
dhcpv6_relay_header::msg_type	dhcpv6.h	/^	uint8_t msg_type;$/;"	m	struct:dhcpv6_relay_header	access:public
dhcpv6_relay_header::options	dhcpv6.h	/^	uint8_t options[];$/;"	m	struct:dhcpv6_relay_header	access:public
dhcpv6_relay_header::peer_address	dhcpv6.h	/^	struct in6_addr peer_address;$/;"	m	struct:dhcpv6_relay_header	typeref:struct:dhcpv6_relay_header::in6_addr	access:public
dhcpv6_write_statefile	dhcpv6-ia.c	/^void dhcpv6_write_statefile(void)$/;"	f	signature:(void)
dhcpv6_write_statefile	dhcpv6.h	/^void dhcpv6_write_statefile(void);$/;"	p	signature:(void)
dns	odhcpd.h	/^	struct in6_addr *dns;$/;"	m	struct:interface	typeref:struct:interface::in6_addr	access:public
dns_cnt	odhcpd.h	/^	size_t dns_cnt;$/;"	m	struct:interface	access:public
do_sigchld	uloop.c	/^static bool do_sigchld = false;$/;"	v	file:
dprefix	odhcpd.h	/^	uint8_t dprefix;$/;"	m	struct:odhcpd_ipaddr	access:public
duid	odhcpd.h	/^	uint8_t *duid;$/;"	m	struct:lease	access:public
duid_len	odhcpd.h	/^	uint16_t duid_len;$/;"	m	struct:lease	access:public
dump	ubus.c	/^static struct blob_attr *dump = NULL;$/;"	v	typeref:struct:blob_attr	file:
dump_attrs	ubus.c	/^static const struct blobmsg_policy dump_attrs[DUMP_ATTR_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
dump_neigh_table	ndp.c	/^static void dump_neigh_table(bool proxy)$/;"	f	file:	signature:(bool proxy)
end	ustream.h	/^	char *end;$/;"	m	struct:ustream_buf	access:public
eof	uloop.h	/^	bool eof;$/;"	m	struct:uloop_fd	access:public
eof	ustream.h	/^	bool eof, eof_write_done;$/;"	m	struct:ustream	access:public
eof_write_done	ustream.h	/^	bool eof, eof_write_done;$/;"	m	struct:ustream	access:public
error	uloop.h	/^	bool error;$/;"	m	struct:uloop_fd	access:public
event_handler	ubus.c	/^static struct ubus_event_handler event_handler = { .cb = handle_event };$/;"	v	typeref:struct:ubus_event_handler	file:
events	uloop.c	/^	unsigned int events;$/;"	m	struct:uloop_fd_event	file:	access:public
events	uloop.c	/^	unsigned int events;$/;"	m	struct:uloop_fd_stack	file:	access:public
events	uloop.c	/^static struct epoll_event events[ULOOP_MAX_EVENTS];$/;"	v	typeref:struct:epoll_event	file:
events	uloop.c	/^static struct kevent events[ULOOP_MAX_EVENTS];$/;"	v	typeref:struct:kevent	file:
external	odhcpd.h	/^	bool external; \/* NDProxy external slave *\/$/;"	m	struct:interface	access:public
fd	uloop.c	/^	struct uloop_fd *fd;$/;"	m	struct:uloop_fd_event	typeref:struct:uloop_fd_event::uloop_fd	file:	access:public
fd	uloop.c	/^	struct uloop_fd *fd;$/;"	m	struct:uloop_fd_stack	typeref:struct:uloop_fd_stack::uloop_fd	file:	access:public
fd	uloop.h	/^	int fd;$/;"	m	struct:uloop_fd	access:public
fd	ustream.h	/^	struct uloop_fd fd;$/;"	m	struct:ustream_fd	typeref:struct:ustream_fd::uloop_fd	access:public
fd_stack	uloop.c	/^static struct uloop_fd_stack *fd_stack = NULL;$/;"	v	typeref:struct:uloop_fd_stack	file:
file	dhcpv4.h	/^	char file[128];$/;"	m	struct:dhcpv4_message	access:public
filter_class	odhcpd.h	/^	char *filter_class;$/;"	m	struct:interface	access:public
flags	dhcpv4.h	/^	uint16_t flags;$/;"	m	struct:dhcpv4_message	access:public
flags	uloop.h	/^	uint8_t flags;$/;"	m	struct:uloop_fd	access:public
foreach_arg	utils.c	24;"	d	file:
forward_router_advertisement	router.c	/^static void forward_router_advertisement(uint8_t *data, size_t len)$/;"	f	file:	signature:(uint8_t *data, size_t len)
forward_router_advertisement	router.c	/^static void forward_router_advertisement(uint8_t *data, size_t len);$/;"	p	file:	signature:(uint8_t *data, size_t len)
forward_router_solicitation	router.c	/^static void forward_router_solicitation(const struct interface *iface)$/;"	f	file:	signature:(const struct interface *iface)
forward_router_solicitation	router.c	/^static void forward_router_solicitation(const struct interface *iface);$/;"	p	file:	signature:(const struct interface *iface)
fp_route	router.c	/^static FILE *fp_route = NULL;$/;"	v	file:
free	ustream.h	/^	void (*free)(struct ustream *s);$/;"	m	struct:ustream	access:public
free_dhcpv6_assignment	dhcpv6-ia.c	/^void free_dhcpv6_assignment(struct dhcpv6_assignment *c)$/;"	f	signature:(struct dhcpv6_assignment *c)
get_flags	uloop.c	/^static uint16_t get_flags(unsigned int flags, unsigned int mask)$/;"	f	file:	signature:(unsigned int flags, unsigned int mask)
get_interface	config.c	/^static struct interface* get_interface(const char *name)$/;"	f	file:	signature:(const char *name)
get_interface	config_bhu.bak.c	/^static struct interface* get_interface(const char *name)$/;"	f	file:	signature:(const char *name)
get_interface	config_bhu.c	/^static struct interface* get_interface(const char *name)$/;"	f	file:	signature:(const char *name)
getlens	dn_comp.c	/^static int getlens(unsigned char *lens, const char *s, int l)$/;"	f	file:	signature:(unsigned char *lens, const char *s, int l)
getoffs	dn_comp.c	/^static int getoffs(short *offs, const unsigned char *base, const unsigned char *s)$/;"	f	file:	signature:(short *offs, const unsigned char *base, const unsigned char *s)
giaddr	dhcpv4.h	/^	struct in_addr giaddr;$/;"	m	struct:dhcpv4_message	typeref:struct:dhcpv4_message::in_addr	access:public
grow	blob.h	/^	bool (*grow)(struct blob_buf *buf, int minlen);$/;"	m	struct:blob_buf	access:public
handle_client_request	dhcpv6.c	/^static void handle_client_request(void *addr, void *data, size_t len,$/;"	f	file:	signature:(void *addr, void *data, size_t len, struct interface *iface, void *dest_addr)
handle_client_request	dhcpv6.c	/^static void handle_client_request(void *addr, void *data, size_t len,$/;"	p	file:	signature:(void *addr, void *data, size_t len, struct interface *iface, void *dest_addr)
handle_dgram	odhcpd.h	/^	void (*handle_dgram)(void *addr, void *data, size_t len,$/;"	m	struct:odhcpd_event	access:public
handle_dhcpv4	dhcpv4.c	/^static void handle_dhcpv4(void *addr, void *data, size_t len,$/;"	f	file:	signature:(void *addr, void *data, size_t len, struct interface *iface, _unused void *dest_addr)
handle_dhcpv4	dhcpv4.c	/^static void handle_dhcpv4(void *addr, void *data, size_t len,$/;"	p	file:	signature:(void *addr, void *data, size_t len, struct interface *iface, void *dest_addr)
handle_dhcpv4_leases	ubus.c	/^static int handle_dhcpv4_leases(struct ubus_context *ctx, _unused struct ubus_object *obj,$/;"	f	file:	signature:(struct ubus_context *ctx, _unused struct ubus_object *obj, struct ubus_request_data *req, _unused const char *method, _unused struct blob_attr *msg)
handle_dhcpv6	dhcpv6.c	/^static void handle_dhcpv6(void *addr, void *data, size_t len,$/;"	f	file:	signature:(void *addr, void *data, size_t len, struct interface *iface, void *dest_addr)
handle_dhcpv6	dhcpv6.c	/^static void handle_dhcpv6(void *addr, void *data, size_t len,$/;"	p	file:	signature:(void *addr, void *data, size_t len, struct interface *iface, void *dest)
handle_dhcpv6_leases	ubus.c	/^static int handle_dhcpv6_leases(_unused struct ubus_context *ctx, _unused struct ubus_object *obj,$/;"	f	file:	signature:(_unused struct ubus_context *ctx, _unused struct ubus_object *obj, _unused struct ubus_request_data *req, _unused const char *method, _unused struct blob_attr *msg)
handle_dump	ubus.c	/^static void handle_dump(_unused struct ubus_request *req, _unused int type, struct blob_attr *msg)$/;"	f	file:	signature:(_unused struct ubus_request *req, _unused int type, struct blob_attr *msg)
handle_error	odhcpd.h	/^	void (*handle_error)(int error);$/;"	m	struct:odhcpd_event	access:public
handle_event	ubus.c	/^static void handle_event(_unused struct ubus_context *ctx, _unused struct ubus_event_handler *ev,$/;"	f	file:	signature:(_unused struct ubus_context *ctx, _unused struct ubus_event_handler *ev, _unused const char *type, struct blob_attr *msg)
handle_icmpv6	router.c	/^static void handle_icmpv6(void *addr, void *data, size_t len,$/;"	f	file:	signature:(void *addr, void *data, size_t len, struct interface *iface, _unused void *dest)
handle_icmpv6	router.c	/^static void handle_icmpv6(void *addr, void *data, size_t len,$/;"	p	file:	signature:(void *addr, void *data, size_t len, struct interface *iface, void *dest)
handle_nested_message	dhcpv6.c	/^static void handle_nested_message(uint8_t *data, size_t len,$/;"	f	file:	signature:(uint8_t *data, size_t len, uint8_t **opts, uint8_t **end, struct iovec iov[IOV_TOTAL - 1])
handle_rtnetlink	ndp.c	/^static void handle_rtnetlink(_unused void *addr, void *data, size_t len,$/;"	f	file:	signature:(_unused void *addr, void *data, size_t len, _unused struct interface *iface, _unused void *dest)
handle_rtnetlink	ndp.c	/^static void handle_rtnetlink(void *addr, void *data, size_t len,$/;"	p	file:	signature:(void *addr, void *data, size_t len, struct interface *iface, void *dest)
handle_signal	config.c	/^static void handle_signal(int signal)$/;"	f	file:	signature:(int signal)
handle_signal	config_bhu.bak.c	/^static void handle_signal(int signal)$/;"	f	file:	signature:(int signal)
handle_signal	config_bhu.c	/^static void handle_signal(int signal)$/;"	f	file:	signature:(int signal)
handle_solicit	ndp.c	/^static void handle_solicit(void *addr, void *data, size_t len,$/;"	f	file:	signature:(void *addr, void *data, size_t len, struct interface *iface, _unused void *dest)
handle_solicit	ndp.c	/^static void handle_solicit(void *addr, void *data, size_t len,$/;"	p	file:	signature:(void *addr, void *data, size_t len, struct interface *iface, void *dest)
handle_update	ubus.c	/^static int handle_update(_unused struct ubus_context *ctx, _unused struct ubus_object *obj,$/;"	f	file:	signature:(_unused struct ubus_context *ctx, _unused struct ubus_object *obj, _unused struct ubus_request_data *req, _unused const char *method, struct blob_attr *msg)
head	blob.h	/^	struct blob_attr *head;$/;"	m	struct:blob_buf	typeref:struct:blob_buf::blob_attr	access:public
head	dhcpv4.h	/^	struct list_head head;$/;"	m	struct:dhcpv4_assignment	typeref:struct:dhcpv4_assignment::list_head	access:public
head	dhcpv6.h	/^	struct list_head head;$/;"	m	struct:dhcpv6_assignment	typeref:struct:dhcpv6_assignment::list_head	access:public
head	ndp.h	/^	struct list_head head;$/;"	m	struct:ndp_neighbor	typeref:struct:ndp_neighbor::list_head	access:public
head	odhcpd.h	/^	struct list_head head;$/;"	m	struct:interface	typeref:struct:interface::list_head	access:public
head	odhcpd.h	/^	struct list_head head;$/;"	m	struct:lease	typeref:struct:lease::list_head	access:public
head	ustream.h	/^	char head[];$/;"	m	struct:ustream_buf	access:public
head	ustream.h	/^	struct ustream_buf *head;$/;"	m	struct:ustream_buf_list	typeref:struct:ustream_buf_list::ustream_buf	access:public
hexdigits	odhcpd.c	/^static const char hexdigits[] = "0123456789abcdef";$/;"	v	file:
hexvals	odhcpd.c	/^static const int8_t hexvals[] = {$/;"	v	file:
hi	md5.h	/^	uint32_t lo, hi;$/;"	m	struct:md5_ctx	access:public
hlen	dhcpv4.h	/^	uint8_t hlen;$/;"	m	struct:dhcpv4_message	access:public
hop_count	dhcpv6.h	/^	uint8_t hop_count;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
hop_count	dhcpv6.h	/^	uint8_t hop_count;$/;"	m	struct:dhcpv6_relay_header	access:public
hops	dhcpv4.h	/^	uint8_t hops;$/;"	m	struct:dhcpv4_message	access:public
hostid	odhcpd.h	/^	uint32_t hostid;$/;"	m	struct:lease	access:public
hostname	dhcpv4.h	/^	char hostname[];$/;"	m	struct:dhcpv4_assignment	access:public
hostname	dhcpv6.h	/^	char *hostname;$/;"	m	struct:dhcpv6_assignment	access:public
hostname	odhcpd.h	/^	char hostname[];$/;"	m	struct:lease	access:public
htype	dhcpv4.h	/^	uint8_t htype;$/;"	m	struct:dhcpv4_message	access:public
hwaddr	dhcpv4.h	/^	uint8_t hwaddr[6];$/;"	m	struct:dhcpv4_assignment	access:public
ia_addr	odhcpd.h	/^	struct odhcpd_ipaddr ia_addr[8];$/;"	m	struct:interface	typeref:struct:interface::odhcpd_ipaddr	access:public
ia_addr_len	odhcpd.h	/^	size_t ia_addr_len;$/;"	m	struct:interface	access:public
ia_assignments	odhcpd.h	/^	struct list_head ia_assignments;$/;"	m	struct:interface	typeref:struct:interface::list_head	access:public
ia_reconf	odhcpd.h	/^	bool ia_reconf;$/;"	m	struct:interface	access:public
iaid	dhcpv6.h	/^	uint32_t iaid;$/;"	m	struct:dhcpv6_assignment	access:public
iaid	dhcpv6.h	/^	uint32_t iaid;$/;"	m	struct:dhcpv6_ia_hdr	access:public
icmpv6_for_each_option	router.h	31;"	d
icmpv6_opt	router.h	/^struct icmpv6_opt {$/;"	s
icmpv6_opt::data	router.h	/^	uint8_t data[6];$/;"	m	struct:icmpv6_opt	access:public
icmpv6_opt::len	router.h	/^	uint8_t len;$/;"	m	struct:icmpv6_opt	access:public
icmpv6_opt::type	router.h	/^	uint8_t type;$/;"	m	struct:icmpv6_opt	access:public
id_len	blob.h	/^	uint32_t id_len;$/;"	m	struct:blob_attr	access:public
iface	ndp.h	/^	struct interface *iface;$/;"	m	struct:ndp_neighbor	typeref:struct:ndp_neighbor::interface	access:public
iface_attr_info	config.c	/^static const struct uci_blob_param_info iface_attr_info[IFACE_ATTR_MAX] = {$/;"	v	typeref:struct:uci_blob_param_info	file:
iface_attrs	config.c	/^static const struct blobmsg_policy iface_attrs[IFACE_ATTR_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
iface_attrs	config_bhu.bak.c	/^static const struct blobmsg_policy iface_attrs[IFACE_ATTR_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
iface_attrs	ubus.c	/^static const struct blobmsg_policy iface_attrs[IFACE_ATTR_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
ifindex	odhcpd.h	/^	int ifindex;$/;"	m	struct:interface	access:public
ifname	odhcpd.h	/^	char ifname[IF_NAMESIZE];$/;"	m	struct:interface	access:public
ignore	odhcpd.h	/^	bool ignore;$/;"	m	struct:interface	access:public
init_dhcpv4	dhcpv4.c	/^int init_dhcpv4(void)$/;"	f	signature:(void)
init_dhcpv4	odhcpd.h	/^int init_dhcpv4(void);$/;"	p	signature:(void)
init_dhcpv6	dhcpv6.c	/^int init_dhcpv6(void)$/;"	f	signature:(void)
init_dhcpv6	odhcpd.h	/^int init_dhcpv6(void);$/;"	p	signature:(void)
init_ndp	ndp.c	/^int init_ndp(void)$/;"	f	signature:(void)
init_ndp	odhcpd.h	/^int init_ndp(void);$/;"	p	signature:(void)
init_router	odhcpd.h	/^int init_router(void);$/;"	p	signature:(void)
init_router	router.c	/^int init_router(void)$/;"	f	signature:(void)
init_ubus	odhcpd.h	/^int init_ubus(void);$/;"	p	signature:(void)
init_ubus	ubus.c	/^int init_ubus(void)$/;"	f	signature:(void)
interface	odhcpd.h	/^struct interface {$/;"	s
interface::always_rewrite_dns	odhcpd.h	/^	bool always_rewrite_dns;$/;"	m	struct:interface	access:public
interface::default_router	odhcpd.h	/^	int default_router;$/;"	m	struct:interface	access:public
interface::dhcpv4	odhcpd.h	/^	enum odhcpd_mode dhcpv4;$/;"	m	struct:interface	typeref:enum:interface::odhcpd_mode	access:public
interface::dhcpv4_assignments	odhcpd.h	/^	struct list_head dhcpv4_assignments;$/;"	m	struct:interface	typeref:struct:interface::list_head	access:public
interface::dhcpv4_dns	odhcpd.h	/^	struct in_addr *dhcpv4_dns;$/;"	m	struct:interface	typeref:struct:interface::in_addr	access:public
interface::dhcpv4_dns_cnt	odhcpd.h	/^	size_t dhcpv4_dns_cnt;$/;"	m	struct:interface	access:public
interface::dhcpv4_end	odhcpd.h	/^	struct in_addr dhcpv4_end;$/;"	m	struct:interface	typeref:struct:interface::in_addr	access:public
interface::dhcpv4_event	odhcpd.h	/^	struct odhcpd_event dhcpv4_event;$/;"	m	struct:interface	typeref:struct:interface::odhcpd_event	access:public
interface::dhcpv4_leasetime	odhcpd.h	/^	uint32_t dhcpv4_leasetime;$/;"	m	struct:interface	access:public
interface::dhcpv4_router	odhcpd.h	/^	struct in_addr *dhcpv4_router;$/;"	m	struct:interface	typeref:struct:interface::in_addr	access:public
interface::dhcpv4_router_cnt	odhcpd.h	/^	size_t dhcpv4_router_cnt;$/;"	m	struct:interface	access:public
interface::dhcpv4_start	odhcpd.h	/^	struct in_addr dhcpv4_start;$/;"	m	struct:interface	typeref:struct:interface::in_addr	access:public
interface::dhcpv6	odhcpd.h	/^	enum odhcpd_mode dhcpv6;$/;"	m	struct:interface	typeref:enum:interface::odhcpd_mode	access:public
interface::dhcpv6_event	odhcpd.h	/^	struct odhcpd_event dhcpv6_event;$/;"	m	struct:interface	typeref:struct:interface::odhcpd_event	access:public
interface::dhcpv6_pd_cer	odhcpd.h	/^	struct in6_addr dhcpv6_pd_cer;$/;"	m	struct:interface	typeref:struct:interface::in6_addr	access:public
interface::dhcpv6_pd_manager	odhcpd.h	/^	char dhcpv6_pd_manager[128];$/;"	m	struct:interface	access:public
interface::dhcpv6_raw	odhcpd.h	/^	void *dhcpv6_raw;$/;"	m	struct:interface	access:public
interface::dhcpv6_raw_len	odhcpd.h	/^	size_t dhcpv6_raw_len;$/;"	m	struct:interface	access:public
interface::dns	odhcpd.h	/^	struct in6_addr *dns;$/;"	m	struct:interface	typeref:struct:interface::in6_addr	access:public
interface::dns_cnt	odhcpd.h	/^	size_t dns_cnt;$/;"	m	struct:interface	access:public
interface::external	odhcpd.h	/^	bool external; \/* NDProxy external slave *\/$/;"	m	struct:interface	access:public
interface::filter_class	odhcpd.h	/^	char *filter_class;$/;"	m	struct:interface	access:public
interface::head	odhcpd.h	/^	struct list_head head;$/;"	m	struct:interface	typeref:struct:interface::list_head	access:public
interface::ia_addr	odhcpd.h	/^	struct odhcpd_ipaddr ia_addr[8];$/;"	m	struct:interface	typeref:struct:interface::odhcpd_ipaddr	access:public
interface::ia_addr_len	odhcpd.h	/^	size_t ia_addr_len;$/;"	m	struct:interface	access:public
interface::ia_assignments	odhcpd.h	/^	struct list_head ia_assignments;$/;"	m	struct:interface	typeref:struct:interface::list_head	access:public
interface::ia_reconf	odhcpd.h	/^	bool ia_reconf;$/;"	m	struct:interface	access:public
interface::ifindex	odhcpd.h	/^	int ifindex;$/;"	m	struct:interface	access:public
interface::ifname	odhcpd.h	/^	char ifname[IF_NAMESIZE];$/;"	m	struct:interface	access:public
interface::ignore	odhcpd.h	/^	bool ignore;$/;"	m	struct:interface	access:public
interface::inuse	odhcpd.h	/^	bool inuse;$/;"	m	struct:interface	access:public
interface::learn_routes	odhcpd.h	/^	int learn_routes; \/* Learn routes from NDP *\/$/;"	m	struct:interface	access:public
interface::managed	odhcpd.h	/^	int managed;$/;"	m	struct:interface	access:public
interface::master	odhcpd.h	/^	bool master;$/;"	m	struct:interface	access:public
interface::name	odhcpd.h	/^	char name[IF_NAMESIZE];$/;"	m	struct:interface	access:public
interface::ndp	odhcpd.h	/^	enum odhcpd_mode ndp;$/;"	m	struct:interface	typeref:enum:interface::odhcpd_mode	access:public
interface::ndp_event	odhcpd.h	/^	struct odhcpd_event ndp_event;$/;"	m	struct:interface	typeref:struct:interface::odhcpd_event	access:public
interface::no_dynamic_dhcp	odhcpd.h	/^	bool no_dynamic_dhcp;$/;"	m	struct:interface	access:public
interface::ra	odhcpd.h	/^	enum odhcpd_mode ra;$/;"	m	struct:interface	typeref:enum:interface::odhcpd_mode	access:public
interface::ra_advrouter	odhcpd.h	/^	bool ra_advrouter;$/;"	m	struct:interface	access:public
interface::ra_maxinterval	odhcpd.h	/^	int ra_maxinterval;$/;"	m	struct:interface	access:public
interface::ra_not_onlink	odhcpd.h	/^	bool ra_not_onlink;$/;"	m	struct:interface	access:public
interface::route_preference	odhcpd.h	/^	int route_preference;$/;"	m	struct:interface	access:public
interface::search	odhcpd.h	/^	uint8_t *search;$/;"	m	struct:interface	access:public
interface::search_len	odhcpd.h	/^	size_t search_len;$/;"	m	struct:interface	access:public
interface::timer_rs	odhcpd.h	/^	struct uloop_timeout timer_rs;$/;"	m	struct:interface	typeref:struct:interface::uloop_timeout	access:public
interface::upstream	odhcpd.h	/^	char *upstream;$/;"	m	struct:interface	access:public
interface::upstream_len	odhcpd.h	/^	size_t upstream_len;$/;"	m	struct:interface	access:public
interface_attr_list	config.c	/^const struct uci_blob_param_list interface_attr_list = {$/;"	v	typeref:struct:uci_blob_param_list
interface_id_data	dhcpv6.h	/^	uint32_t interface_id_data;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
interface_id_len	dhcpv6.h	/^	uint16_t interface_id_len;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
interface_id_type	dhcpv6.h	/^	uint16_t interface_id_type;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
interfaces	config.c	/^struct list_head interfaces = LIST_HEAD_INIT(interfaces);$/;"	v	typeref:struct:list_head
interfaces	config_bhu.bak.c	/^struct list_head interfaces = LIST_HEAD_INIT(interfaces);$/;"	v	typeref:struct:list_head
interfaces	config_bhu.c	/^struct list_head interfaces = LIST_HEAD_INIT(interfaces);$/;"	v	typeref:struct:list_head
inuse	odhcpd.h	/^	bool inuse;$/;"	m	struct:interface	access:public
ioctl_sock	odhcpd.c	/^static int ioctl_sock;$/;"	v	file:
ipaddr	odhcpd.h	/^	struct in_addr ipaddr;$/;"	m	struct:lease	typeref:struct:lease::in_addr	access:public
key	dhcpv6.h	/^	uint8_t key[16];$/;"	m	struct:dhcpv6_assignment	access:public
key	dhcpv6.h	/^	uint8_t key[16];$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
le16_to_cpu	utils.h	133;"	d
le16_to_cpu	utils.h	143;"	d
le32_to_cpu	utils.h	132;"	d
le32_to_cpu	utils.h	142;"	d
le64_to_cpu	utils.h	131;"	d
le64_to_cpu	utils.h	141;"	d
learn_routes	odhcpd.h	/^	int learn_routes; \/* Learn routes from NDP *\/$/;"	m	struct:interface	access:public
lease	odhcpd.h	/^struct lease {$/;"	s
lease::dhcpv4_leasetime	odhcpd.h	/^	uint32_t dhcpv4_leasetime;$/;"	m	struct:lease	access:public
lease::duid	odhcpd.h	/^	uint8_t *duid;$/;"	m	struct:lease	access:public
lease::duid_len	odhcpd.h	/^	uint16_t duid_len;$/;"	m	struct:lease	access:public
lease::head	odhcpd.h	/^	struct list_head head;$/;"	m	struct:lease	typeref:struct:lease::list_head	access:public
lease::hostid	odhcpd.h	/^	uint32_t hostid;$/;"	m	struct:lease	access:public
lease::hostname	odhcpd.h	/^	char hostname[];$/;"	m	struct:lease	access:public
lease::ipaddr	odhcpd.h	/^	struct in_addr ipaddr;$/;"	m	struct:lease	typeref:struct:lease::in_addr	access:public
lease::mac	odhcpd.h	/^	struct ether_addr mac;$/;"	m	struct:lease	typeref:struct:lease::ether_addr	access:public
lease_attr_list	config.c	/^const struct uci_blob_param_list lease_attr_list = {$/;"	v	typeref:struct:uci_blob_param_list
lease_attrs	config.c	/^static const struct blobmsg_policy lease_attrs[LEASE_ATTR_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
lease_attrs	config_bhu.bak.c	/^static const struct blobmsg_policy lease_attrs[LEASE_ATTR_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
leases	config.c	/^struct list_head leases = LIST_HEAD_INIT(leases);$/;"	v	typeref:struct:list_head
leases	config_bhu.bak.c	/^struct list_head leases = LIST_HEAD_INIT(leases);$/;"	v	typeref:struct:list_head
leases	config_bhu.c	/^struct list_head leases = LIST_HEAD_INIT(leases);$/;"	v	typeref:struct:list_head
leasetime	dhcpv4.h	/^	uint32_t leasetime;$/;"	m	struct:dhcpv4_assignment	access:public
leasetime	dhcpv6.h	/^	uint32_t leasetime;$/;"	m	struct:dhcpv6_assignment	access:public
legacy	odhcpd.h	/^	bool legacy;$/;"	m	struct:config	access:public
len	dhcpv4.h	/^	uint8_t len;$/;"	m	struct:dhcpv4_option	access:public
len	dhcpv6.h	/^	uint16_t len;$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
len	dhcpv6.h	/^	uint16_t len;$/;"	m	struct:dhcpv6_cer_id	access:public
len	dhcpv6.h	/^	uint16_t len;$/;"	m	struct:dhcpv6_ia_addr	access:public
len	dhcpv6.h	/^	uint16_t len;$/;"	m	struct:dhcpv6_ia_hdr	access:public
len	dhcpv6.h	/^	uint16_t len;$/;"	m	struct:dhcpv6_ia_prefix	access:public
len	ndp.h	/^	uint8_t len;$/;"	m	struct:ndp_neighbor	access:public
len	router.h	/^	uint8_t len;$/;"	m	struct:icmpv6_opt	access:public
length	dhcpv6.h	/^	uint8_t length; \/\/ length == 128 -> IA_NA, length <= 64 -> IA_PD$/;"	m	struct:dhcpv6_assignment	access:public
link_address	dhcpv6.h	/^	struct in6_addr link_address;$/;"	m	struct:dhcpv6_relay_forward_envelope	typeref:struct:dhcpv6_relay_forward_envelope::in6_addr	access:public
link_address	dhcpv6.h	/^	struct in6_addr link_address;$/;"	m	struct:dhcpv6_relay_header	typeref:struct:dhcpv6_relay_header::in6_addr	access:public
list	uloop.h	/^	struct list_head list;$/;"	m	struct:uloop_process	typeref:struct:uloop_process::list_head	access:public
list	uloop.h	/^	struct list_head list;$/;"	m	struct:uloop_timeout	typeref:struct:uloop_timeout::list_head	access:public
list_add	list.h	/^list_add(struct list_head *_new, struct list_head *head)$/;"	f	signature:(struct list_head *_new, struct list_head *head)
list_add_tail	list.h	/^list_add_tail(struct list_head *_new, struct list_head *head)$/;"	f	signature:(struct list_head *_new, struct list_head *head)
list_del	list.h	/^list_del(struct list_head *entry)$/;"	f	signature:(struct list_head *entry)
list_del_init	list.h	/^list_del_init(struct list_head *entry)$/;"	f	signature:(struct list_head *entry)
list_empty	list.h	/^list_empty(const struct list_head *head)$/;"	f	signature:(const struct list_head *head)
list_entry	list.h	112;"	d
list_first_entry	list.h	113;"	d
list_for_each	list.h	116;"	d
list_for_each_entry	list.h	122;"	d
list_for_each_entry_reverse	list.h	131;"	d
list_for_each_entry_safe	list.h	126;"	d
list_for_each_prev	list.h	135;"	d
list_for_each_prev_safe	list.h	136;"	d
list_for_each_safe	list.h	119;"	d
list_head	list.h	/^struct list_head {$/;"	s
list_head::next	list.h	/^	struct list_head *next;$/;"	m	struct:list_head	typeref:struct:list_head::list_head	access:public
list_head::prev	list.h	/^	struct list_head *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head	access:public
list_is_first	list.h	/^list_is_first(const struct list_head *list,$/;"	f	signature:(const struct list_head *list, const struct list_head *head)
list_is_last	list.h	/^list_is_last(const struct list_head *list,$/;"	f	signature:(const struct list_head *list, const struct list_head *head)
list_last_entry	list.h	114;"	d
list_move	list.h	/^list_move(struct list_head *list, struct list_head *head)$/;"	f	signature:(struct list_head *list, struct list_head *head)
list_move_tail	list.h	/^list_move_tail(struct list_head *entry, struct list_head *head)$/;"	f	signature:(struct list_head *entry, struct list_head *head)
list_splice	list.h	/^list_splice(const struct list_head *list, struct list_head *head)$/;"	f	signature:(const struct list_head *list, struct list_head *head)
list_splice_init	list.h	/^list_splice_init(struct list_head *list, struct list_head *head)$/;"	f	signature:(struct list_head *list, struct list_head *head)
list_splice_tail	list.h	/^list_splice_tail(struct list_head *list, struct list_head *head)$/;"	f	signature:(struct list_head *list, struct list_head *head)
list_splice_tail_init	list.h	/^list_splice_tail_init(struct list_head *list, struct list_head *head)$/;"	f	signature:(struct list_head *list, struct list_head *head)
lo	md5.h	/^	uint32_t lo, hi;$/;"	m	struct:md5_ctx	access:public
mac	dhcpv6.h	/^	uint8_t mac[6];$/;"	m	struct:dhcpv6_assignment	access:public
mac	odhcpd.h	/^	struct ether_addr mac;$/;"	m	struct:lease	typeref:struct:lease::ether_addr	access:public
main	odhcpd.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	t.c	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main_object	ubus.c	/^static struct ubus_object main_object = {$/;"	v	typeref:struct:ubus_object	file:
main_object_methods	ubus.c	/^static struct ubus_method main_object_methods[] = {$/;"	v	typeref:struct:ubus_method	file:
main_object_type	ubus.c	/^static struct ubus_object_type main_object_type =$/;"	v	typeref:struct:ubus_object_type	file:
managed	dhcpv6.h	/^	struct odhcpd_ipaddr *managed;$/;"	m	struct:dhcpv6_assignment	typeref:struct:dhcpv6_assignment::odhcpd_ipaddr	access:public
managed	odhcpd.h	/^	int managed;$/;"	m	struct:interface	access:public
managed_handle_pd_data	dhcpv6-ia.c	/^static void managed_handle_pd_data(struct ustream *s, _unused int bytes_new)$/;"	f	file:	signature:(struct ustream *s, _unused int bytes_new)
managed_handle_pd_done	dhcpv6-ia.c	/^static void managed_handle_pd_done(struct ustream *s)$/;"	f	file:	signature:(struct ustream *s)
managed_size	dhcpv6.h	/^	ssize_t managed_size;$/;"	m	struct:dhcpv6_assignment	access:public
managed_sock	dhcpv6.h	/^	struct ustream_fd managed_sock;$/;"	m	struct:dhcpv6_assignment	typeref:struct:dhcpv6_assignment::ustream_fd	access:public
master	odhcpd.h	/^	bool master;$/;"	m	struct:interface	access:public
match	dn_comp.c	/^static int match(int *offset, const unsigned char *base, const unsigned char *dn,$/;"	f	file:	signature:(int *offset, const unsigned char *base, const unsigned char *dn, const char *end, const unsigned char *lens, int nlen)
max_buffers	ustream.h	/^	int max_buffers;$/;"	m	struct:ustream_buf_list	access:public
maxlen	blob.h	/^	unsigned int maxlen;$/;"	m	struct:blob_attr_info	access:public
md5_begin	md5.c	/^void md5_begin(md5_ctx_t *ctx)$/;"	f	signature:(md5_ctx_t *ctx)
md5_begin	md5.h	/^extern void md5_begin(md5_ctx_t *ctx);$/;"	p	signature:(md5_ctx_t *ctx)
md5_ctx	md5.h	/^typedef struct md5_ctx {$/;"	s
md5_ctx::a	md5.h	/^	uint32_t a, b, c, d;$/;"	m	struct:md5_ctx	access:public
md5_ctx::b	md5.h	/^	uint32_t a, b, c, d;$/;"	m	struct:md5_ctx	access:public
md5_ctx::buffer	md5.h	/^	unsigned char buffer[64];$/;"	m	struct:md5_ctx	access:public
md5_ctx::c	md5.h	/^	uint32_t a, b, c, d;$/;"	m	struct:md5_ctx	access:public
md5_ctx::d	md5.h	/^	uint32_t a, b, c, d;$/;"	m	struct:md5_ctx	access:public
md5_ctx::hi	md5.h	/^	uint32_t lo, hi;$/;"	m	struct:md5_ctx	access:public
md5_ctx::lo	md5.h	/^	uint32_t lo, hi;$/;"	m	struct:md5_ctx	access:public
md5_ctx_t	md5.h	/^} md5_ctx_t;$/;"	t	typeref:struct:md5_ctx
md5_end	md5.c	/^void md5_end(void *resbuf, md5_ctx_t *ctx)$/;"	f	signature:(void *resbuf, md5_ctx_t *ctx)
md5_end	md5.h	/^extern void md5_end(void *resbuf, md5_ctx_t *ctx);$/;"	p	signature:(void *resbuf, md5_ctx_t *ctx)
md5_hash	md5.c	/^void md5_hash(const void *data, size_t size, md5_ctx_t *ctx)$/;"	f	signature:(const void *data, size_t size, md5_ctx_t *ctx)
md5_hash	md5.h	/^extern void md5_hash(const void *data, size_t length, md5_ctx_t *ctx);$/;"	p	signature:(const void *data, size_t length, md5_ctx_t *ctx)
md5sum	md5.c	/^int md5sum(char *file, void *md5_buf)$/;"	f	signature:(char *file, void *md5_buf)
md5sum	md5.h	/^int md5sum(char *file, void *md5_buf);$/;"	p	signature:(char *file, void *md5_buf)
min_buffers	ustream.h	/^	int min_buffers;$/;"	m	struct:ustream_buf_list	access:public
minlen	blob.h	/^	unsigned int minlen;$/;"	m	struct:blob_attr_info	access:public
msg_type	dhcpv6.h	/^	uint8_t msg_type;$/;"	m	struct:dhcpv6_client_header	access:public
msg_type	dhcpv6.h	/^	uint8_t msg_type;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
msg_type	dhcpv6.h	/^	uint8_t msg_type;$/;"	m	struct:dhcpv6_relay_header	access:public
name	blobmsg.h	/^	const char *name;$/;"	m	struct:blobmsg_policy	access:public
name	blobmsg.h	/^	uint8_t name[];$/;"	m	struct:blobmsg_hdr	access:public
name	odhcpd.h	/^	char name[IF_NAMESIZE];$/;"	m	struct:interface	access:public
namelen	blobmsg.h	/^	uint16_t namelen;$/;"	m	struct:blobmsg_hdr	access:public
ndp	odhcpd.h	/^	enum odhcpd_mode ndp;$/;"	m	struct:interface	typeref:enum:interface::odhcpd_mode	access:public
ndp_event	odhcpd.h	/^	struct odhcpd_event ndp_event;$/;"	m	struct:interface	typeref:struct:interface::odhcpd_event	access:public
ndp_neighbor	ndp.h	/^struct ndp_neighbor {$/;"	s
ndp_neighbor::addr	ndp.h	/^	struct in6_addr addr;$/;"	m	struct:ndp_neighbor	typeref:struct:ndp_neighbor::in6_addr	access:public
ndp_neighbor::head	ndp.h	/^	struct list_head head;$/;"	m	struct:ndp_neighbor	typeref:struct:ndp_neighbor::list_head	access:public
ndp_neighbor::iface	ndp.h	/^	struct interface *iface;$/;"	m	struct:ndp_neighbor	typeref:struct:ndp_neighbor::interface	access:public
ndp_neighbor::len	ndp.h	/^	uint8_t len;$/;"	m	struct:ndp_neighbor	access:public
ndp_neighbor::timeout	ndp.h	/^	time_t timeout;$/;"	m	struct:ndp_neighbor	access:public
netifd	ubus.c	/^static struct ubus_subscriber netifd;$/;"	v	typeref:struct:ubus_subscriber	file:
next	list.h	/^	struct list_head *next;$/;"	m	struct:list_head	typeref:struct:list_head::list_head	access:public
next	uloop.c	/^	struct uloop_fd_stack *next;$/;"	m	struct:uloop_fd_stack	typeref:struct:uloop_fd_stack::uloop_fd_stack	file:	access:public
next	ustream.h	/^	struct ustream *next;$/;"	m	struct:ustream	typeref:struct:ustream::ustream	access:public
next	ustream.h	/^	struct ustream_buf *next;$/;"	m	struct:ustream_buf	typeref:struct:ustream_buf::ustream_buf	access:public
no_dynamic_dhcp	odhcpd.h	/^	bool no_dynamic_dhcp;$/;"	m	struct:interface	access:public
notify_read	ustream.h	/^	void (*notify_read)(struct ustream *s, int bytes_new);$/;"	m	struct:ustream	access:public
notify_state	ustream.h	/^	void (*notify_state)(struct ustream *s);$/;"	m	struct:ustream	access:public
notify_write	ustream.h	/^	void (*notify_write)(struct ustream *s, int bytes);$/;"	m	struct:ustream	access:public
obj_attrs	ubus.c	/^static const struct blobmsg_policy obj_attrs[OBJ_ATTR_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
objid	ubus.c	/^static uint32_t objid = 0;$/;"	v	file:
objs	Makefile	/^objs=$(patsubst %c,%o,$(srcs))$/;"	m
odhcpd_attr_list	config.c	/^const struct uci_blob_param_list odhcpd_attr_list = {$/;"	v	typeref:struct:uci_blob_param_list
odhcpd_attrs	config.c	/^static const struct blobmsg_policy odhcpd_attrs[LEASE_ATTR_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
odhcpd_attrs	config_bhu.bak.c	/^static const struct blobmsg_policy odhcpd_attrs[LEASE_ATTR_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
odhcpd_bmemcmp	odhcpd.c	/^int odhcpd_bmemcmp(const void *av, const void *bv, size_t bits)$/;"	f	signature:(const void *av, const void *bv, size_t bits)
odhcpd_bmemcmp	odhcpd.h	/^int odhcpd_bmemcmp(const void *av, const void *bv, size_t bits);$/;"	p	signature:(const void *av, const void *bv, size_t bits)
odhcpd_bmemcpy	odhcpd.c	/^void odhcpd_bmemcpy(void *av, const void *bv, size_t bits)$/;"	f	signature:(void *av, const void *bv, size_t bits)
odhcpd_bmemcpy	odhcpd.h	/^void odhcpd_bmemcpy(void *av, const void *bv, size_t bits);$/;"	p	signature:(void *av, const void *bv, size_t bits)
odhcpd_event	odhcpd.h	/^struct odhcpd_event {$/;"	s
odhcpd_event::handle_dgram	odhcpd.h	/^	void (*handle_dgram)(void *addr, void *data, size_t len,$/;"	m	struct:odhcpd_event	access:public
odhcpd_event::handle_error	odhcpd.h	/^	void (*handle_error)(int error);$/;"	m	struct:odhcpd_event	access:public
odhcpd_event::uloop	odhcpd.h	/^	struct uloop_fd uloop;$/;"	m	struct:odhcpd_event	typeref:struct:odhcpd_event::uloop_fd	access:public
odhcpd_get_interface_addresses	odhcpd.c	/^ssize_t odhcpd_get_interface_addresses(int ifindex,$/;"	f	signature:(int ifindex, struct odhcpd_ipaddr *addrs, size_t cnt)
odhcpd_get_interface_addresses	odhcpd.h	/^ssize_t odhcpd_get_interface_addresses(int ifindex,$/;"	p	signature:(int ifindex, struct odhcpd_ipaddr *addrs, size_t cnt)
odhcpd_get_interface_by_index	odhcpd.c	/^struct interface* odhcpd_get_interface_by_index(int ifindex)$/;"	f	signature:(int ifindex)
odhcpd_get_interface_by_index	odhcpd.h	/^struct interface* odhcpd_get_interface_by_index(int ifindex);$/;"	p	signature:(int ifindex)
odhcpd_get_interface_by_name	odhcpd.c	/^struct interface* odhcpd_get_interface_by_name(const char *name)$/;"	f	signature:(const char *name)
odhcpd_get_interface_by_name	odhcpd.h	/^struct interface* odhcpd_get_interface_by_name(const char *name);$/;"	p	signature:(const char *name)
odhcpd_get_interface_config	odhcpd.c	/^int odhcpd_get_interface_config(const char *ifname, const char *what)$/;"	f	signature:(const char *ifname, const char *what)
odhcpd_get_interface_config	odhcpd.h	/^int odhcpd_get_interface_config(const char *ifname, const char *what);$/;"	p	signature:(const char *ifname, const char *what)
odhcpd_get_linklocal_interface_address	odhcpd.c	/^int odhcpd_get_linklocal_interface_address(int ifindex, struct in6_addr *lladdr)$/;"	f	signature:(int ifindex, struct in6_addr *lladdr)
odhcpd_get_linklocal_interface_address	odhcpd.h	/^int odhcpd_get_linklocal_interface_address(int ifindex, struct in6_addr *lladdr);$/;"	p	signature:(int ifindex, struct in6_addr *lladdr)
odhcpd_get_mac	odhcpd.c	/^int odhcpd_get_mac(const struct interface *iface, uint8_t mac[6])$/;"	f	signature:(const struct interface *iface, uint8_t mac[6])
odhcpd_get_mac	odhcpd.h	/^int odhcpd_get_mac(const struct interface *iface, uint8_t mac[6]);$/;"	p	signature:(const struct interface *iface, uint8_t mac[6])
odhcpd_get_master_interface	odhcpd.c	/^struct interface* odhcpd_get_master_interface(void)$/;"	f	signature:(void)
odhcpd_get_master_interface	odhcpd.h	/^struct interface* odhcpd_get_master_interface(void);$/;"	p	signature:(void)
odhcpd_hexlify	odhcpd.c	/^void odhcpd_hexlify(char *dst, const uint8_t *src, size_t len)$/;"	f	signature:(char *dst, const uint8_t *src, size_t len)
odhcpd_hexlify	odhcpd.h	/^void odhcpd_hexlify(char *dst, const uint8_t *src, size_t len);$/;"	p	signature:(char *dst, const uint8_t *src, size_t len)
odhcpd_ipaddr	odhcpd.h	/^struct odhcpd_ipaddr {$/;"	s
odhcpd_ipaddr::addr	odhcpd.h	/^	struct in6_addr addr;$/;"	m	struct:odhcpd_ipaddr	typeref:struct:odhcpd_ipaddr::in6_addr	access:public
odhcpd_ipaddr::dprefix	odhcpd.h	/^	uint8_t dprefix;$/;"	m	struct:odhcpd_ipaddr	access:public
odhcpd_ipaddr::preferred	odhcpd.h	/^	uint32_t preferred;$/;"	m	struct:odhcpd_ipaddr	access:public
odhcpd_ipaddr::prefix	odhcpd.h	/^	uint8_t prefix;$/;"	m	struct:odhcpd_ipaddr	access:public
odhcpd_ipaddr::valid	odhcpd.h	/^	uint32_t valid;$/;"	m	struct:odhcpd_ipaddr	access:public
odhcpd_mode	odhcpd.h	/^enum odhcpd_mode {$/;"	g
odhcpd_open_rtnl	odhcpd.c	/^int odhcpd_open_rtnl(void)$/;"	f	signature:(void)
odhcpd_open_rtnl	odhcpd.h	/^int odhcpd_open_rtnl(void);$/;"	p	signature:(void)
odhcpd_process	odhcpd.c	/^void odhcpd_process(struct odhcpd_event *event)$/;"	f	signature:(struct odhcpd_event *event)
odhcpd_process	odhcpd.h	/^void odhcpd_process(struct odhcpd_event *event);$/;"	p	signature:(struct odhcpd_event *event)
odhcpd_receive_packets	odhcpd.c	/^static void odhcpd_receive_packets(struct uloop_fd *u, _unused unsigned int events)$/;"	f	file:	signature:(struct uloop_fd *u, _unused unsigned int events)
odhcpd_register	odhcpd.c	/^int odhcpd_register(struct odhcpd_event *event)$/;"	f	signature:(struct odhcpd_event *event)
odhcpd_register	odhcpd.h	/^int odhcpd_register(struct odhcpd_event *event);$/;"	p	signature:(struct odhcpd_event *event)
odhcpd_reload	config.c	/^void odhcpd_reload(void)$/;"	f	signature:(void)
odhcpd_reload	config_bhu.bak.c	/^void odhcpd_reload(void)$/;"	f	signature:(void)
odhcpd_reload	config_bhu.c	/^void odhcpd_reload(const char *stf, $/;"	f	signature:(const char *stf, const char *cb, const char *ifname, const char *dns)
odhcpd_reload	odhcpd.h	/^void odhcpd_reload(const char *stf, $/;"	p	signature:(const char *stf, const char *cb, const char *ifname, const char *dns)
odhcpd_run	config.c	/^void odhcpd_run(void)$/;"	f	signature:(void)
odhcpd_run	config_bhu.bak.c	/^void odhcpd_run(void)$/;"	f	signature:(void)
odhcpd_run	config_bhu.c	/^void odhcpd_run(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
odhcpd_run	odhcpd.h	/^void odhcpd_run(int argc, char *argv[]);$/;"	p	signature:(int argc, char *argv[])
odhcpd_send	odhcpd.c	/^ssize_t odhcpd_send(int socket, struct sockaddr_in6 *dest,$/;"	f	signature:(int socket, struct sockaddr_in6 *dest, struct iovec *iov, size_t iov_len, const struct interface *iface)
odhcpd_send	odhcpd.h	/^ssize_t odhcpd_send(int socket, struct sockaddr_in6 *dest,$/;"	p	signature:(int socket, struct sockaddr_in6 *dest, struct iovec *iov, size_t iov_len, const struct interface *iface)
odhcpd_setup_route	odhcpd.c	/^void odhcpd_setup_route(const struct in6_addr *addr, int prefixlen,$/;"	f	signature:(const struct in6_addr *addr, int prefixlen, const struct interface *iface, const struct in6_addr *gw, int metric, bool add)
odhcpd_setup_route	odhcpd.h	/^void odhcpd_setup_route(const struct in6_addr *addr, int prefixlen,$/;"	p	signature:(const struct in6_addr *addr, int prefixlen, const struct interface *iface, const struct in6_addr *gw, int metric, bool add)
odhcpd_time	odhcpd.c	/^time_t odhcpd_time(void)$/;"	f	signature:(void)
odhcpd_time	odhcpd.h	/^time_t odhcpd_time(void);$/;"	p	signature:(void)
odhcpd_unhexlify	odhcpd.c	/^ssize_t odhcpd_unhexlify(uint8_t *dst, size_t len, const char *src)$/;"	f	signature:(uint8_t *dst, size_t len, const char *src)
odhcpd_unhexlify	odhcpd.h	/^ssize_t odhcpd_unhexlify(uint8_t *dst, size_t len, const char *src);$/;"	p	signature:(uint8_t *dst, size_t len, const char *src)
odhcpd_urandom	odhcpd.c	/^int odhcpd_urandom(void *data, size_t len)$/;"	f	signature:(void *data, size_t len)
odhcpd_urandom	odhcpd.h	/^int odhcpd_urandom(void *data, size_t len);$/;"	p	signature:(void *data, size_t len)
offset_to_attr	blob.c	/^offset_to_attr(struct blob_buf *buf, int offset)$/;"	f	file:	signature:(struct blob_buf *buf, int offset)
op	dhcpv4.h	/^	uint8_t op;$/;"	m	struct:dhcpv4_message	access:public
options	dhcpv4.h	/^	uint8_t options[312];$/;"	m	struct:dhcpv4_message	access:public
options	dhcpv6.h	/^	uint8_t options[];$/;"	m	struct:dhcpv6_relay_header	access:public
parse_leasetime	config.c	/^static double parse_leasetime(struct blob_attr *c) {$/;"	f	file:	signature:(struct blob_attr *c)
parse_mode	config.c	/^static int parse_mode(const char *mode)$/;"	f	file:	signature:(const char *mode)
parse_mode	config_bhu.bak.c	/^static int parse_mode(const char *mode)$/;"	f	file:	signature:(const char *mode)
parse_routes	router.c	/^static bool parse_routes(struct odhcpd_ipaddr *n, ssize_t len)$/;"	f	file:	signature:(struct odhcpd_ipaddr *n, ssize_t len)
peer	dhcpv6.h	/^	struct sockaddr_in6 peer;$/;"	m	struct:dhcpv6_assignment	typeref:struct:dhcpv6_assignment::sockaddr_in6	access:public
peer_address	dhcpv6.h	/^	struct in6_addr peer_address;$/;"	m	struct:dhcpv6_relay_forward_envelope	typeref:struct:dhcpv6_relay_forward_envelope::in6_addr	access:public
peer_address	dhcpv6.h	/^	struct in6_addr peer_address;$/;"	m	struct:dhcpv6_relay_header	typeref:struct:dhcpv6_relay_header::in6_addr	access:public
pending	uloop.h	/^	bool pending;$/;"	m	struct:uloop_process	access:public
pending	uloop.h	/^	bool pending;$/;"	m	struct:uloop_timeout	access:public
pid	uloop.h	/^	pid_t pid;$/;"	m	struct:uloop_process	access:public
ping6	ndp.c	/^static void ping6(struct in6_addr *addr,$/;"	f	file:	signature:(struct in6_addr *addr, const struct interface *iface)
ping_socket	ndp.c	/^static int ping_socket = -1;$/;"	v	file:
poll	ustream.h	/^	bool (*poll)(struct ustream *s);$/;"	m	struct:ustream	access:public
poll_fd	uloop.c	/^static int poll_fd = -1;$/;"	v	file:
poll_restart	usock.c	/^static int poll_restart(struct pollfd *fds, int nfds, int timeout)$/;"	f	file:	signature:(struct pollfd *fds, int nfds, int timeout)
preferred	dhcpv6.h	/^	uint32_t preferred;$/;"	m	struct:dhcpv6_ia_addr	access:public
preferred	dhcpv6.h	/^	uint32_t preferred;$/;"	m	struct:dhcpv6_ia_prefix	access:public
preferred	odhcpd.h	/^	uint32_t preferred;$/;"	m	struct:odhcpd_ipaddr	access:public
prefetch	list.h	35;"	d
prefix	dhcpv6.h	/^	uint8_t prefix;$/;"	m	struct:dhcpv6_ia_prefix	access:public
prefix	odhcpd.h	/^	uint8_t prefix;$/;"	m	struct:odhcpd_ipaddr	access:public
prefixcmp	ndp.c	/^static int prefixcmp(const void *va, const void *vb)$/;"	f	file:	signature:(const void *va, const void *vb)
prev	list.h	/^	struct list_head *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head	access:public
processes	uloop.c	/^static struct list_head processes = LIST_HEAD_INIT(processes);$/;"	v	typeref:struct:list_head	file:
protocol	dhcpv6.h	/^	uint8_t protocol;$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
r	ustream.h	/^	struct ustream_buf_list r, w;$/;"	m	struct:ustream	typeref:struct:ustream::ustream_buf_list	access:public
ra	odhcpd.h	/^	enum odhcpd_mode ra;$/;"	m	struct:interface	typeref:enum:interface::odhcpd_mode	access:public
ra_advrouter	odhcpd.h	/^	bool ra_advrouter;$/;"	m	struct:interface	access:public
ra_maxinterval	odhcpd.h	/^	int ra_maxinterval;$/;"	m	struct:interface	access:public
ra_not_onlink	odhcpd.h	/^	bool ra_not_onlink;$/;"	m	struct:interface	access:public
rdm	dhcpv6.h	/^	uint8_t rdm;$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
read_blocked	ustream.h	/^	enum read_blocked_reason read_blocked;$/;"	m	struct:ustream	typeref:enum:ustream::read_blocked_reason	access:public
read_blocked_reason	ustream.h	/^enum read_blocked_reason {$/;"	g
reconf_cnt	dhcpv6.h	/^	int reconf_cnt;$/;"	m	struct:dhcpv6_assignment	access:public
reconf_event	dhcpv6-ia.c	/^static struct uloop_timeout reconf_event = {.cb = reconf_timer};$/;"	v	typeref:struct:uloop_timeout	file:
reconf_sent	dhcpv6.h	/^	time_t reconf_sent;$/;"	m	struct:dhcpv6_assignment	access:public
reconf_timer	dhcpv6-ia.c	/^static void reconf_timer(struct uloop_timeout *event)$/;"	f	file:	signature:(struct uloop_timeout *event)
reconf_timer	dhcpv6-ia.c	/^static void reconf_timer(struct uloop_timeout *event);$/;"	p	file:	signature:(struct uloop_timeout *event)
reconf_type	dhcpv6.h	/^	uint8_t reconf_type;$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
register_kevent	uloop.c	/^static int register_kevent(struct uloop_fd *fd, unsigned int flags)$/;"	f	file:	signature:(struct uloop_fd *fd, unsigned int flags)
register_poll	uloop.c	/^static int register_poll(struct uloop_fd *fd, unsigned int flags)$/;"	f	file:	signature:(struct uloop_fd *fd, unsigned int flags)
registered	uloop.h	/^	bool registered;$/;"	m	struct:uloop_fd	access:public
relay_client_request	dhcpv6.c	/^static void relay_client_request(struct sockaddr_in6 *source,$/;"	f	file:	signature:(struct sockaddr_in6 *source, const void *data, size_t len, struct interface *iface)
relay_client_request	dhcpv6.c	/^static void relay_client_request(struct sockaddr_in6 *source,$/;"	p	file:	signature:(struct sockaddr_in6 *source, const void *data, size_t len, struct interface *iface)
relay_message_len	dhcpv6.h	/^	uint16_t relay_message_len;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
relay_message_type	dhcpv6.h	/^	uint16_t relay_message_type;$/;"	m	struct:dhcpv6_relay_forward_envelope	access:public
relay_server_response	dhcpv6.c	/^static void relay_server_response(uint8_t *data, size_t len)$/;"	f	file:	signature:(uint8_t *data, size_t len)
relay_server_response	dhcpv6.c	/^static void relay_server_response(uint8_t *data, size_t len);$/;"	p	file:	signature:(uint8_t *data, size_t len)
reload_cb	config.c	/^static void reload_cb(struct uloop_fd *u, _unused unsigned int events)$/;"	f	file:	signature:(struct uloop_fd *u, _unused unsigned int events)
reload_cb	config_bhu.bak.c	/^static void reload_cb(struct uloop_fd *u, _unused unsigned int events)$/;"	f	file:	signature:(struct uloop_fd *u, _unused unsigned int events)
reload_fd	config.c	/^static struct uloop_fd reload_fd = { .cb = reload_cb };$/;"	v	typeref:struct:uloop_fd	file:
reload_fd	config_bhu.bak.c	/^static struct uloop_fd reload_fd = { .cb = reload_cb };$/;"	v	typeref:struct:uloop_fd	file:
reload_pipe	config.c	/^static int reload_pipe[2];$/;"	v	file:
reload_pipe	config_bhu.bak.c	/^static int reload_pipe[2];$/;"	v	file:
reload_pipe	config_bhu.c	/^static int reload_pipe[2];$/;"	v	file:
replay	dhcpv6.h	/^	uint32_t replay[2];$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
req_dump	ubus.c	/^static struct ubus_request req_dump = { .list = LIST_HEAD_INIT(req_dump.list) };$/;"	v	typeref:struct:ubus_request	file:
reserved	dhcpv6.h	/^	uint16_t reserved;$/;"	m	struct:dhcpv6_cer_id	access:public
route_preference	odhcpd.h	/^	int route_preference;$/;"	m	struct:interface	access:public
router_event	router.c	/^static struct odhcpd_event router_event = {{.fd = -1}, handle_icmpv6, NULL};$/;"	v	typeref:struct:odhcpd_event	file:
router_icmpv6_valid	router.c	/^static bool router_icmpv6_valid(struct sockaddr_in6 *source, uint8_t *data, size_t len)$/;"	f	file:	signature:(struct sockaddr_in6 *source, uint8_t *data, size_t len)
rtnl_event	ndp.c	/^static struct odhcpd_event rtnl_event = {{.fd = -1}, handle_rtnetlink, catch_rtnetlink};$/;"	v	typeref:struct:odhcpd_event	file:
rtnl_seq	odhcpd.c	/^static int rtnl_seq = 0;$/;"	v	file:
rtnl_seqid	ndp.c	/^static uint32_t rtnl_seqid = 0;$/;"	v	file:
rtnl_socket	odhcpd.c	/^static int rtnl_socket = -1;$/;"	v	file:
search	odhcpd.h	/^	uint8_t *search;$/;"	m	struct:interface	access:public
search_len	odhcpd.h	/^	size_t search_len;$/;"	m	struct:interface	access:public
secs	dhcpv4.h	/^	uint16_t secs;$/;"	m	struct:dhcpv4_message	access:public
send_reconf	dhcpv6-ia.c	/^static int send_reconf(struct interface *iface, struct dhcpv6_assignment *assign)$/;"	f	file:	signature:(struct interface *iface, struct dhcpv6_assignment *assign)
send_router_advert	router.c	/^static uint64_t send_router_advert(struct interface *iface, const struct in6_addr *from)$/;"	f	file:	signature:(struct interface *iface, const struct in6_addr *from)
serial	dhcpv6-ia.c	/^static uint32_t serial = 0;$/;"	v	file:
set_config	config.c	/^static void set_config(struct uci_section *s)$/;"	f	file:	signature:(struct uci_section *s)
set_config	config_bhu.c	/^static void set_config(const char *stf, const char *cb)$/;"	f	file:	signature:(const char *stf, const char *cb)
set_interface	config.c	/^static int set_interface(struct uci_section *s)$/;"	f	file:	signature:(struct uci_section *s)
set_interface	config_bhu.c	/^static int set_interface(const char *ifname, const char *dns)$/;"	f	file:	signature:(const char *ifname, const char *dns)
set_lease	config.c	/^static int set_lease(struct uci_section *s)$/;"	f	file:	signature:(struct uci_section *s)
set_read_blocked	ustream.h	/^	void (*set_read_blocked)(struct ustream *s);$/;"	m	struct:ustream	access:public
setup_dhcpv4_interface	dhcpv4.c	/^int setup_dhcpv4_interface(struct interface *iface, bool enable)$/;"	f	signature:(struct interface *iface, bool enable)
setup_dhcpv4_interface	odhcpd.h	/^int setup_dhcpv4_interface(struct interface *iface, bool enable);$/;"	p	signature:(struct interface *iface, bool enable)
setup_dhcpv6_ia_interface	dhcpv6-ia.c	/^int setup_dhcpv6_ia_interface(struct interface *iface, bool enable)$/;"	f	signature:(struct interface *iface, bool enable)
setup_dhcpv6_ia_interface	dhcpv6.h	/^int setup_dhcpv6_ia_interface(struct interface *iface, bool enable);$/;"	p	signature:(struct interface *iface, bool enable)
setup_dhcpv6_interface	dhcpv6.c	/^int setup_dhcpv6_interface(struct interface *iface, bool enable)$/;"	f	signature:(struct interface *iface, bool enable)
setup_dhcpv6_interface	odhcpd.h	/^int setup_dhcpv6_interface(struct interface *iface, bool enable);$/;"	p	signature:(struct interface *iface, bool enable)
setup_ndp_interface	ndp.c	/^int setup_ndp_interface(struct interface *iface, bool enable)$/;"	f	signature:(struct interface *iface, bool enable)
setup_ndp_interface	odhcpd.h	/^int setup_ndp_interface(struct interface *iface, bool enable);$/;"	p	signature:(struct interface *iface, bool enable)
setup_route	ndp.c	/^static void setup_route(struct in6_addr *addr, struct interface *iface, bool add)$/;"	f	file:	signature:(struct in6_addr *addr, struct interface *iface, bool add)
setup_router_interface	odhcpd.h	/^int setup_router_interface(struct interface *iface, bool enable);$/;"	p	signature:(struct interface *iface, bool enable)
setup_router_interface	router.c	/^int setup_router_interface(struct interface *iface, bool enable)$/;"	f	signature:(struct interface *iface, bool enable)
siaddr	dhcpv4.h	/^	struct in_addr siaddr;$/;"	m	struct:dhcpv4_message	typeref:struct:dhcpv4_message::in_addr	access:public
sighandler	odhcpd.c	/^static void sighandler(_unused int signal)$/;"	f	file:	signature:(_unused int signal)
sigusr1_refresh	router.c	/^static void sigusr1_refresh(_unused int signal)$/;"	f	file:	signature:(_unused int signal)
sigusr1_refresh	router.c	/^static void sigusr1_refresh(int signal);$/;"	p	file:	signature:(int signal)
sname	dhcpv4.h	/^	char sname[64];$/;"	m	struct:dhcpv4_message	access:public
srcs	Makefile	/^srcs=dhcpv4.c  dhcpv6.c  dhcpv6-ia.c  ndp.c  odhcpd.c  router.c  uloop.c utils.c  md5.c usock.c config_bhu.c ustream.c ustream-fd.c dn_comp.c$/;"	m
state_change	ustream.h	/^	struct uloop_timeout state_change;$/;"	m	struct:ustream	typeref:struct:ustream::uloop_timeout	access:public
statemd5	dhcpv6-ia.c	/^static uint8_t statemd5[16];$/;"	v	file:
stream	ustream.h	/^	struct ustream stream;$/;"	m	struct:ustream_fd	typeref:struct:ustream_fd::ustream	access:public
string_data	ustream.h	/^	bool string_data;$/;"	m	struct:ustream	access:public
syslog	odhcpd.h	46;"	d
t1	dhcpv6.h	/^	uint32_t t1;$/;"	m	struct:dhcpv6_ia_hdr	access:public
t2	dhcpv6.h	/^	uint32_t t2;$/;"	m	struct:dhcpv6_ia_hdr	access:public
tail	ustream.h	/^	char *tail;$/;"	m	struct:ustream_buf	access:public
tail	ustream.h	/^	struct ustream_buf *tail;$/;"	m	struct:ustream_buf_list	typeref:struct:ustream_buf_list::ustream_buf	access:public
tc_str2ip6	config_bhu.c	/^tc_str2ip6 (const char *str, struct in6_addr *in6)$/;"	f	signature:(const char *str, struct in6_addr *in6)
time	uloop.h	/^	struct timeval time;$/;"	m	struct:uloop_timeout	typeref:struct:uloop_timeout::timeval	access:public
timeout	ndp.h	/^	time_t timeout;$/;"	m	struct:ndp_neighbor	access:public
timeouts	uloop.c	/^static struct list_head timeouts = LIST_HEAD_INIT(timeouts);$/;"	v	typeref:struct:list_head	file:
timer_rs	odhcpd.h	/^	struct uloop_timeout timer_rs;$/;"	m	struct:interface	typeref:struct:interface::uloop_timeout	access:public
transaction_id	dhcpv6.h	/^	uint8_t transaction_id[3];$/;"	m	struct:dhcpv6_client_header	access:public
trigger_router_advert	router.c	/^static void trigger_router_advert(struct uloop_timeout *event)$/;"	f	file:	signature:(struct uloop_timeout *event)
trigger_router_advert	router.c	/^static void trigger_router_advert(struct uloop_timeout *event);$/;"	p	file:	signature:(struct uloop_timeout *event)
tv_diff	uloop.c	/^static int tv_diff(struct timeval *t1, struct timeval *t2)$/;"	f	file:	signature:(struct timeval *t1, struct timeval *t2)
type	blob.h	/^	unsigned int type;$/;"	m	struct:blob_attr_info	access:public
type	blobmsg.h	/^	enum blobmsg_type type;$/;"	m	struct:blobmsg_policy	typeref:enum:blobmsg_policy::blobmsg_type	access:public
type	dhcpv4.h	/^	uint8_t type;$/;"	m	struct:dhcpv4_option	access:public
type	dhcpv6.h	/^	uint16_t type;$/;"	m	struct:dhcpv6_auth_reconfigure	access:public
type	dhcpv6.h	/^	uint16_t type;$/;"	m	struct:dhcpv6_cer_id	access:public
type	dhcpv6.h	/^	uint16_t type;$/;"	m	struct:dhcpv6_ia_addr	access:public
type	dhcpv6.h	/^	uint16_t type;$/;"	m	struct:dhcpv6_ia_hdr	access:public
type	dhcpv6.h	/^	uint16_t type;$/;"	m	struct:dhcpv6_ia_prefix	access:public
type	router.h	/^	uint8_t type;$/;"	m	struct:icmpv6_opt	access:public
typeof	odhcpd.h	28;"	d
ubus	ubus.c	/^static struct ubus_context *ubus = NULL;$/;"	v	typeref:struct:ubus_context	file:
ubus_apply_network	odhcpd.h	/^void ubus_apply_network(void);$/;"	p	signature:(void)
ubus_apply_network	ubus.c	/^void ubus_apply_network(void)$/;"	f	signature:(void)
ubus_get_ifname	odhcpd.h	/^const char* ubus_get_ifname(const char *name);$/;"	p	signature:(const char *name)
ubus_get_ifname	ubus.c	/^const char* ubus_get_ifname(const char *name)$/;"	f	signature:(const char *name)
ubus_has_prefix	odhcpd.h	/^bool ubus_has_prefix(const char *name, const char *ifname);$/;"	p	signature:(const char *name, const char *ifname)
ubus_has_prefix	ubus.c	/^bool ubus_has_prefix(const char *name, const char *ifname)$/;"	f	signature:(const char *name, const char *ifname)
uloop	odhcpd.h	/^	struct uloop_fd uloop;$/;"	m	struct:odhcpd_event	typeref:struct:odhcpd_event::uloop_fd	access:public
uloop_cancelled	uloop.c	/^bool uloop_cancelled = false;$/;"	v
uloop_clear_processes	uloop.c	/^static void uloop_clear_processes(void)$/;"	f	file:	signature:(void)
uloop_clear_timeouts	uloop.c	/^static void uloop_clear_timeouts(void)$/;"	f	file:	signature:(void)
uloop_done	uloop.c	/^void uloop_done(void)$/;"	f	signature:(void)
uloop_done	uloop.h	/^void uloop_done(void);$/;"	p	signature:(void)
uloop_end	uloop.h	/^static inline void uloop_end(void)$/;"	f	signature:(void)
uloop_fd	uloop.h	/^struct uloop_fd$/;"	s
uloop_fd::cb	uloop.h	/^	uloop_fd_handler cb;$/;"	m	struct:uloop_fd	access:public
uloop_fd::eof	uloop.h	/^	bool eof;$/;"	m	struct:uloop_fd	access:public
uloop_fd::error	uloop.h	/^	bool error;$/;"	m	struct:uloop_fd	access:public
uloop_fd::fd	uloop.h	/^	int fd;$/;"	m	struct:uloop_fd	access:public
uloop_fd::flags	uloop.h	/^	uint8_t flags;$/;"	m	struct:uloop_fd	access:public
uloop_fd::registered	uloop.h	/^	bool registered;$/;"	m	struct:uloop_fd	access:public
uloop_fd_add	uloop.c	/^int uloop_fd_add(struct uloop_fd *sock, unsigned int flags)$/;"	f	signature:(struct uloop_fd *sock, unsigned int flags)
uloop_fd_add	uloop.h	/^int uloop_fd_add(struct uloop_fd *sock, unsigned int flags);$/;"	p	signature:(struct uloop_fd *sock, unsigned int flags)
uloop_fd_delete	uloop.c	/^int uloop_fd_delete(struct uloop_fd *fd)$/;"	f	signature:(struct uloop_fd *fd)
uloop_fd_delete	uloop.h	/^int uloop_fd_delete(struct uloop_fd *sock);$/;"	p	signature:(struct uloop_fd *sock)
uloop_fd_event	uloop.c	/^struct uloop_fd_event {$/;"	s	file:
uloop_fd_event::events	uloop.c	/^	unsigned int events;$/;"	m	struct:uloop_fd_event	file:	access:public
uloop_fd_event::fd	uloop.c	/^	struct uloop_fd *fd;$/;"	m	struct:uloop_fd_event	typeref:struct:uloop_fd_event::uloop_fd	file:	access:public
uloop_fd_handler	uloop.h	/^typedef void (*uloop_fd_handler)(struct uloop_fd *u, unsigned int events);$/;"	t
uloop_fd_stack	uloop.c	/^struct uloop_fd_stack {$/;"	s	file:
uloop_fd_stack::events	uloop.c	/^	unsigned int events;$/;"	m	struct:uloop_fd_stack	file:	access:public
uloop_fd_stack::fd	uloop.c	/^	struct uloop_fd *fd;$/;"	m	struct:uloop_fd_stack	typeref:struct:uloop_fd_stack::uloop_fd	file:	access:public
uloop_fd_stack::next	uloop.c	/^	struct uloop_fd_stack *next;$/;"	m	struct:uloop_fd_stack	typeref:struct:uloop_fd_stack::uloop_fd_stack	file:	access:public
uloop_fd_stack_event	uloop.c	/^static bool uloop_fd_stack_event(struct uloop_fd *fd, int events)$/;"	f	file:	signature:(struct uloop_fd *fd, int events)
uloop_fetch_events	uloop.c	/^static int uloop_fetch_events(int timeout)$/;"	f	file:	signature:(int timeout)
uloop_get_next_timeout	uloop.c	/^static int uloop_get_next_timeout(struct timeval *tv)$/;"	f	file:	signature:(struct timeval *tv)
uloop_gettime	uloop.c	/^static void uloop_gettime(struct timeval *tv)$/;"	f	file:	signature:(struct timeval *tv)
uloop_handle_processes	uloop.c	/^static void uloop_handle_processes(void)$/;"	f	file:	signature:(void)
uloop_handle_sigint	uloop.c	/^static void uloop_handle_sigint(int signo)$/;"	f	file:	signature:(int signo)
uloop_ignore_signal	uloop.c	/^static void uloop_ignore_signal(int signum, bool ignore)$/;"	f	file:	signature:(int signum, bool ignore)
uloop_init	uloop.c	/^int uloop_init(void)$/;"	f	signature:(void)
uloop_init	uloop.h	/^int uloop_init(void);$/;"	p	signature:(void)
uloop_install_handler	uloop.c	/^static void uloop_install_handler(int signum, void (*handler)(int), struct sigaction* old, bool add)$/;"	f	file:	signature:(int signum, void (*handler)(int), struct sigaction* old, bool add)
uloop_process	uloop.h	/^struct uloop_process$/;"	s
uloop_process::cb	uloop.h	/^	uloop_process_handler cb;$/;"	m	struct:uloop_process	access:public
uloop_process::list	uloop.h	/^	struct list_head list;$/;"	m	struct:uloop_process	typeref:struct:uloop_process::list_head	access:public
uloop_process::pending	uloop.h	/^	bool pending;$/;"	m	struct:uloop_process	access:public
uloop_process::pid	uloop.h	/^	pid_t pid;$/;"	m	struct:uloop_process	access:public
uloop_process_add	uloop.c	/^int uloop_process_add(struct uloop_process *p)$/;"	f	signature:(struct uloop_process *p)
uloop_process_add	uloop.h	/^int uloop_process_add(struct uloop_process *p);$/;"	p	signature:(struct uloop_process *p)
uloop_process_delete	uloop.c	/^int uloop_process_delete(struct uloop_process *p)$/;"	f	signature:(struct uloop_process *p)
uloop_process_delete	uloop.h	/^int uloop_process_delete(struct uloop_process *p);$/;"	p	signature:(struct uloop_process *p)
uloop_process_handler	uloop.h	/^typedef void (*uloop_process_handler)(struct uloop_process *c, int ret);$/;"	t
uloop_process_timeouts	uloop.c	/^static void uloop_process_timeouts(struct timeval *tv)$/;"	f	file:	signature:(struct timeval *tv)
uloop_run	uloop.c	/^void uloop_run(void)$/;"	f	signature:(void)
uloop_run	uloop.h	/^void uloop_run(void);$/;"	p	signature:(void)
uloop_run_events	uloop.c	/^static void uloop_run_events(int timeout)$/;"	f	file:	signature:(int timeout)
uloop_setup_signals	uloop.c	/^static void uloop_setup_signals(bool add)$/;"	f	file:	signature:(bool add)
uloop_sigchld	uloop.c	/^static void uloop_sigchld(int signo)$/;"	f	file:	signature:(int signo)
uloop_timeout	uloop.h	/^struct uloop_timeout$/;"	s
uloop_timeout::cb	uloop.h	/^	uloop_timeout_handler cb;$/;"	m	struct:uloop_timeout	access:public
uloop_timeout::list	uloop.h	/^	struct list_head list;$/;"	m	struct:uloop_timeout	typeref:struct:uloop_timeout::list_head	access:public
uloop_timeout::pending	uloop.h	/^	bool pending;$/;"	m	struct:uloop_timeout	access:public
uloop_timeout::time	uloop.h	/^	struct timeval time;$/;"	m	struct:uloop_timeout	typeref:struct:uloop_timeout::timeval	access:public
uloop_timeout_add	uloop.c	/^int uloop_timeout_add(struct uloop_timeout *timeout)$/;"	f	signature:(struct uloop_timeout *timeout)
uloop_timeout_add	uloop.h	/^int uloop_timeout_add(struct uloop_timeout *timeout);$/;"	p	signature:(struct uloop_timeout *timeout)
uloop_timeout_cancel	uloop.c	/^int uloop_timeout_cancel(struct uloop_timeout *timeout)$/;"	f	signature:(struct uloop_timeout *timeout)
uloop_timeout_cancel	uloop.h	/^int uloop_timeout_cancel(struct uloop_timeout *timeout);$/;"	p	signature:(struct uloop_timeout *timeout)
uloop_timeout_handler	uloop.h	/^typedef void (*uloop_timeout_handler)(struct uloop_timeout *t);$/;"	t
uloop_timeout_remaining	uloop.c	/^int uloop_timeout_remaining(struct uloop_timeout *timeout)$/;"	f	signature:(struct uloop_timeout *timeout)
uloop_timeout_remaining	uloop.h	/^int uloop_timeout_remaining(struct uloop_timeout *timeout);$/;"	p	signature:(struct uloop_timeout *timeout)
uloop_timeout_set	uloop.c	/^int uloop_timeout_set(struct uloop_timeout *timeout, int msecs)$/;"	f	signature:(struct uloop_timeout *timeout, int msecs)
uloop_timeout_set	uloop.h	/^int uloop_timeout_set(struct uloop_timeout *timeout, int msecs);$/;"	p	signature:(struct uloop_timeout *timeout, int msecs)
update_nested_message	dhcpv6.c	/^static void update_nested_message(uint8_t *data, size_t len, ssize_t pdiff)$/;"	f	file:	signature:(uint8_t *data, size_t len, ssize_t pdiff)
update_netifd	ubus.c	/^static void update_netifd(bool subscribe)$/;"	f	file:	signature:(bool subscribe)
upstream	odhcpd.h	/^	char *upstream;$/;"	m	struct:interface	access:public
upstream_len	odhcpd.h	/^	size_t upstream_len;$/;"	m	struct:interface	access:public
urandom_fd	odhcpd.c	/^static int urandom_fd = -1;$/;"	v	file:
usock	usock.c	/^int usock(int type, const char *host, const char *service) {$/;"	f	signature:(int type, const char *host, const char *service)
usock	usock.h	/^int usock(int type, const char *host, const char *service);$/;"	p	signature:(int type, const char *host, const char *service)
usock_connect	usock.c	/^static int usock_connect(int type, struct sockaddr *sa, int sa_len, int family, int socktype, bool server)$/;"	f	file:	signature:(int type, struct sockaddr *sa, int sa_len, int family, int socktype, bool server)
usock_inet	usock.h	/^usock_inet(int type, const char *host, const char *service, void *addr)$/;"	f	signature:(int type, const char *host, const char *service, void *addr)
usock_inet_notimeout	usock.c	/^usock_inet_notimeout(int type, struct addrinfo *result, void *addr)$/;"	f	file:	signature:(int type, struct addrinfo *result, void *addr)
usock_inet_timeout	usock.c	/^int usock_inet_timeout(int type, const char *host, const char *service,$/;"	f	signature:(int type, const char *host, const char *service, void *addr, int timeout)
usock_inet_timeout	usock.h	/^int usock_inet_timeout(int type, const char *host, const char *service,$/;"	p	signature:(int type, const char *host, const char *service, void *addr, int timeout)
usock_port	usock.c	/^const char *usock_port(int port)$/;"	f	signature:(int port)
usock_port	usock.h	/^const char *usock_port(int port);$/;"	p	signature:(int port)
usock_set_flags	usock.c	/^static void usock_set_flags(int sock, unsigned int type)$/;"	f	file:	signature:(int sock, unsigned int type)
usock_unix	usock.c	/^static int usock_unix(int type, const char *host)$/;"	f	file:	signature:(int type, const char *host)
usock_wait_ready	usock.c	/^int usock_wait_ready(int fd, int msecs) {$/;"	f	signature:(int fd, int msecs)
usock_wait_ready	usock.h	/^int usock_wait_ready(int fd, int msecs);$/;"	p	signature:(int fd, int msecs)
ustream	ustream.h	/^struct ustream {$/;"	s
ustream::eof	ustream.h	/^	bool eof, eof_write_done;$/;"	m	struct:ustream	access:public
ustream::eof_write_done	ustream.h	/^	bool eof, eof_write_done;$/;"	m	struct:ustream	access:public
ustream::free	ustream.h	/^	void (*free)(struct ustream *s);$/;"	m	struct:ustream	access:public
ustream::next	ustream.h	/^	struct ustream *next;$/;"	m	struct:ustream	typeref:struct:ustream::ustream	access:public
ustream::notify_read	ustream.h	/^	void (*notify_read)(struct ustream *s, int bytes_new);$/;"	m	struct:ustream	access:public
ustream::notify_state	ustream.h	/^	void (*notify_state)(struct ustream *s);$/;"	m	struct:ustream	access:public
ustream::notify_write	ustream.h	/^	void (*notify_write)(struct ustream *s, int bytes);$/;"	m	struct:ustream	access:public
ustream::poll	ustream.h	/^	bool (*poll)(struct ustream *s);$/;"	m	struct:ustream	access:public
ustream::r	ustream.h	/^	struct ustream_buf_list r, w;$/;"	m	struct:ustream	typeref:struct:ustream::ustream_buf_list	access:public
ustream::read_blocked	ustream.h	/^	enum read_blocked_reason read_blocked;$/;"	m	struct:ustream	typeref:enum:ustream::read_blocked_reason	access:public
ustream::set_read_blocked	ustream.h	/^	void (*set_read_blocked)(struct ustream *s);$/;"	m	struct:ustream	access:public
ustream::state_change	ustream.h	/^	struct uloop_timeout state_change;$/;"	m	struct:ustream	typeref:struct:ustream::uloop_timeout	access:public
ustream::string_data	ustream.h	/^	bool string_data;$/;"	m	struct:ustream	access:public
ustream::w	ustream.h	/^	struct ustream_buf_list r, w;$/;"	m	struct:ustream	typeref:struct:ustream::	access:public
ustream::write	ustream.h	/^	int (*write)(struct ustream *s, const char *buf, int len, bool more);$/;"	m	struct:ustream	access:public
ustream::write_error	ustream.h	/^	bool write_error;$/;"	m	struct:ustream	access:public
ustream_add_buf	ustream.c	/^static void ustream_add_buf(struct ustream_buf_list *l, struct ustream_buf *buf)$/;"	f	file:	signature:(struct ustream_buf_list *l, struct ustream_buf *buf)
ustream_alloc_default	ustream.c	/^static int ustream_alloc_default(struct ustream *s, struct ustream_buf_list *l)$/;"	f	file:	signature:(struct ustream *s, struct ustream_buf_list *l)
ustream_buf	ustream.h	/^struct ustream_buf {$/;"	s
ustream_buf::data	ustream.h	/^	char *data;$/;"	m	struct:ustream_buf	access:public
ustream_buf::end	ustream.h	/^	char *end;$/;"	m	struct:ustream_buf	access:public
ustream_buf::head	ustream.h	/^	char head[];$/;"	m	struct:ustream_buf	access:public
ustream_buf::next	ustream.h	/^	struct ustream_buf *next;$/;"	m	struct:ustream_buf	typeref:struct:ustream_buf::ustream_buf	access:public
ustream_buf::tail	ustream.h	/^	char *tail;$/;"	m	struct:ustream_buf	access:public
ustream_buf_list	ustream.h	/^struct ustream_buf_list {$/;"	s
ustream_buf_list::alloc	ustream.h	/^	int (*alloc)(struct ustream *s, struct ustream_buf_list *l);$/;"	m	struct:ustream_buf_list	access:public
ustream_buf_list::buffer_len	ustream.h	/^	int buffer_len;$/;"	m	struct:ustream_buf_list	access:public
ustream_buf_list::buffers	ustream.h	/^	int buffers;$/;"	m	struct:ustream_buf_list	access:public
ustream_buf_list::data_bytes	ustream.h	/^	int data_bytes;$/;"	m	struct:ustream_buf_list	access:public
ustream_buf_list::data_tail	ustream.h	/^	struct ustream_buf *data_tail;$/;"	m	struct:ustream_buf_list	typeref:struct:ustream_buf_list::ustream_buf	access:public
ustream_buf_list::head	ustream.h	/^	struct ustream_buf *head;$/;"	m	struct:ustream_buf_list	typeref:struct:ustream_buf_list::ustream_buf	access:public
ustream_buf_list::max_buffers	ustream.h	/^	int max_buffers;$/;"	m	struct:ustream_buf_list	access:public
ustream_buf_list::min_buffers	ustream.h	/^	int min_buffers;$/;"	m	struct:ustream_buf_list	access:public
ustream_buf_list::tail	ustream.h	/^	struct ustream_buf *tail;$/;"	m	struct:ustream_buf_list	typeref:struct:ustream_buf_list::ustream_buf	access:public
ustream_can_alloc	ustream.c	/^static bool ustream_can_alloc(struct ustream_buf_list *l)$/;"	f	file:	signature:(struct ustream_buf_list *l)
ustream_consume	ustream.c	/^void ustream_consume(struct ustream *s, int len)$/;"	f	signature:(struct ustream *s, int len)
ustream_consume	ustream.h	/^void ustream_consume(struct ustream *s, int len);$/;"	p	signature:(struct ustream *s, int len)
ustream_fd	ustream.h	/^struct ustream_fd {$/;"	s
ustream_fd::fd	ustream.h	/^	struct uloop_fd fd;$/;"	m	struct:ustream_fd	typeref:struct:ustream_fd::uloop_fd	access:public
ustream_fd::stream	ustream.h	/^	struct ustream stream;$/;"	m	struct:ustream_fd	typeref:struct:ustream_fd::ustream	access:public
ustream_fd_free	ustream-fd.c	/^static void ustream_fd_free(struct ustream *s)$/;"	f	file:	signature:(struct ustream *s)
ustream_fd_init	ustream-fd.c	/^void ustream_fd_init(struct ustream_fd *sf, int fd)$/;"	f	signature:(struct ustream_fd *sf, int fd)
ustream_fd_init	ustream.h	/^void ustream_fd_init(struct ustream_fd *s, int fd);$/;"	p	signature:(struct ustream_fd *s, int fd)
ustream_fd_poll	ustream-fd.c	/^static bool ustream_fd_poll(struct ustream *s)$/;"	f	file:	signature:(struct ustream *s)
ustream_fd_read_pending	ustream-fd.c	/^static void ustream_fd_read_pending(struct ustream_fd *sf, bool *more)$/;"	f	file:	signature:(struct ustream_fd *sf, bool *more)
ustream_fd_set_read_blocked	ustream-fd.c	/^static void ustream_fd_set_read_blocked(struct ustream *s)$/;"	f	file:	signature:(struct ustream *s)
ustream_fd_set_uloop	ustream-fd.c	/^static void ustream_fd_set_uloop(struct ustream *s, bool write)$/;"	f	file:	signature:(struct ustream *s, bool write)
ustream_fd_write	ustream-fd.c	/^static int ustream_fd_write(struct ustream *s, const char *buf, int buflen, bool more)$/;"	f	file:	signature:(struct ustream *s, const char *buf, int buflen, bool more)
ustream_fill_read	ustream.c	/^void ustream_fill_read(struct ustream *s, int len)$/;"	f	signature:(struct ustream *s, int len)
ustream_fill_read	ustream.h	/^void ustream_fill_read(struct ustream *s, int len);$/;"	p	signature:(struct ustream *s, int len)
ustream_fixup_string	ustream.c	/^static void ustream_fixup_string(struct ustream *s, struct ustream_buf *buf)$/;"	f	file:	signature:(struct ustream *s, struct ustream_buf *buf)
ustream_free	ustream.c	/^void ustream_free(struct ustream *s)$/;"	f	signature:(struct ustream *s)
ustream_free	ustream.h	/^void ustream_free(struct ustream *s);$/;"	p	signature:(struct ustream *s)
ustream_free_buf	ustream.c	/^static void ustream_free_buf(struct ustream_buf_list *l, struct ustream_buf *buf)$/;"	f	file:	signature:(struct ustream_buf_list *l, struct ustream_buf *buf)
ustream_free_buffers	ustream.c	/^static void ustream_free_buffers(struct ustream_buf_list *l)$/;"	f	file:	signature:(struct ustream_buf_list *l)
ustream_get_read_buf	ustream.c	/^char *ustream_get_read_buf(struct ustream *s, int *buflen)$/;"	f	signature:(struct ustream *s, int *buflen)
ustream_get_read_buf	ustream.h	/^char *ustream_get_read_buf(struct ustream *s, int *buflen);$/;"	p	signature:(struct ustream *s, int *buflen)
ustream_init_buf	ustream.c	/^static void ustream_init_buf(struct ustream_buf *buf, int len)$/;"	f	file:	signature:(struct ustream_buf *buf, int len)
ustream_init_defaults	ustream.c	/^void ustream_init_defaults(struct ustream *s)$/;"	f	signature:(struct ustream *s)
ustream_init_defaults	ustream.h	/^void ustream_init_defaults(struct ustream *s);$/;"	p	signature:(struct ustream *s)
ustream_pending_data	ustream.h	/^static inline int ustream_pending_data(struct ustream *s, bool write)$/;"	f	signature:(struct ustream *s, bool write)
ustream_poll	ustream.h	/^static inline bool ustream_poll(struct ustream *s)$/;"	f	signature:(struct ustream *s)
ustream_prepare_buf	ustream.c	/^static bool ustream_prepare_buf(struct ustream *s, struct ustream_buf_list *l, int len)$/;"	f	file:	signature:(struct ustream *s, struct ustream_buf_list *l, int len)
ustream_printf	ustream.c	/^int ustream_printf(struct ustream *s, const char *format, ...)$/;"	f	signature:(struct ustream *s, const char *format, ...)
ustream_printf	ustream.h	/^int ustream_printf(struct ustream *s, const char *format, ...);$/;"	p	signature:(struct ustream *s, const char *format, ...)
ustream_read	ustream.c	/^int ustream_read(struct ustream *s, char *buf, int buflen)$/;"	f	signature:(struct ustream *s, char *buf, int buflen)
ustream_read	ustream.h	/^int ustream_read(struct ustream *s, char *buf, int buflen);$/;"	p	signature:(struct ustream *s, char *buf, int buflen)
ustream_read_blocked	ustream.h	/^static inline bool ustream_read_blocked(struct ustream *s)$/;"	f	signature:(struct ustream *s)
ustream_read_buf_full	ustream.h	/^static inline bool ustream_read_buf_full(struct ustream *s)$/;"	f	signature:(struct ustream *s)
ustream_reserve	ustream.c	/^char *ustream_reserve(struct ustream *s, int len, int *maxlen)$/;"	f	signature:(struct ustream *s, int len, int *maxlen)
ustream_reserve	ustream.h	/^char *ustream_reserve(struct ustream *s, int len, int *maxlen);$/;"	p	signature:(struct ustream *s, int len, int *maxlen)
ustream_set_read_blocked	ustream.c	/^void ustream_set_read_blocked(struct ustream *s, bool set)$/;"	f	signature:(struct ustream *s, bool set)
ustream_set_read_blocked	ustream.h	/^void ustream_set_read_blocked(struct ustream *s, bool set);$/;"	p	signature:(struct ustream *s, bool set)
ustream_should_move	ustream.c	/^static bool ustream_should_move(struct ustream_buf_list *l, struct ustream_buf *buf, int len)$/;"	f	file:	signature:(struct ustream_buf_list *l, struct ustream_buf *buf, int len)
ustream_state_change	ustream.h	/^static inline void ustream_state_change(struct ustream *s)$/;"	f	signature:(struct ustream *s)
ustream_state_change_cb	ustream.c	/^static void ustream_state_change_cb(struct uloop_timeout *t)$/;"	f	file:	signature:(struct uloop_timeout *t)
ustream_uloop_cb	ustream-fd.c	/^static void ustream_uloop_cb(struct uloop_fd *fd, unsigned int events)$/;"	f	file:	signature:(struct uloop_fd *fd, unsigned int events)
ustream_vprintf	ustream.c	/^int ustream_vprintf(struct ustream *s, const char *format, va_list arg)$/;"	f	signature:(struct ustream *s, const char *format, va_list arg)
ustream_vprintf	ustream.h	/^int ustream_vprintf(struct ustream *s, const char *format, va_list arg);$/;"	p	signature:(struct ustream *s, const char *format, va_list arg)
ustream_write	ustream.c	/^int ustream_write(struct ustream *s, const char *data, int len, bool more)$/;"	f	signature:(struct ustream *s, const char *data, int len, bool more)
ustream_write	ustream.h	/^int ustream_write(struct ustream *s, const char *buf, int len, bool more);$/;"	p	signature:(struct ustream *s, const char *buf, int len, bool more)
ustream_write_buffered	ustream.c	/^static int ustream_write_buffered(struct ustream *s, const char *data, int len, int wr)$/;"	f	file:	signature:(struct ustream *s, const char *data, int len, int wr)
ustream_write_error	ustream.c	/^static void ustream_write_error(struct ustream *s)$/;"	f	file:	signature:(struct ustream *s)
ustream_write_pending	ustream.c	/^bool ustream_write_pending(struct ustream *s)$/;"	f	signature:(struct ustream *s)
ustream_write_pending	ustream.h	/^bool ustream_write_pending(struct ustream *s);$/;"	p	signature:(struct ustream *s)
valid	dhcpv6.h	/^	uint32_t valid;$/;"	m	struct:dhcpv6_ia_addr	access:public
valid	dhcpv6.h	/^	uint32_t valid;$/;"	m	struct:dhcpv6_ia_prefix	access:public
valid	odhcpd.h	/^	uint32_t valid;$/;"	m	struct:odhcpd_ipaddr	access:public
valid_until	dhcpv4.h	/^	time_t valid_until;$/;"	m	struct:dhcpv4_assignment	access:public
valid_until	dhcpv6.h	/^	time_t valid_until;$/;"	m	struct:dhcpv6_assignment	access:public
validate	blob.h	/^	bool (*validate)(const struct blob_attr_info *, struct blob_attr *);$/;"	m	struct:blob_attr_info	access:public
w	ustream.h	/^	struct ustream_buf_list r, w;$/;"	m	struct:ustream	typeref:struct:ustream::	access:public
write	ustream.h	/^	int (*write)(struct ustream *s, const char *buf, int len, bool more);$/;"	m	struct:ustream	access:public
write_error	ustream.h	/^	bool write_error;$/;"	m	struct:ustream	access:public
xid	dhcpv4.h	/^	uint32_t xid;$/;"	m	struct:dhcpv4_message	access:public
yiaddr	dhcpv4.h	/^	struct in_addr yiaddr;$/;"	m	struct:dhcpv4_message	typeref:struct:dhcpv4_message::in_addr	access:public
